{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import '@fortawesome/fontawesome-free/css/all.min.css';\n// // import axios from 'axios';\n// // import MessageSystem from './MessageSystem';\n// // import { IoPersonCircleSharp } from \"react-icons/io5\";\n// // interface Chat {\n// //   name: string;\n// //   message: string;\n// //   time: string;\n// //   avatar: string;\n// //   status: string;\n// //   mobile: number;\n// //   mobileNumber: string; \n// // }\n\n// // const Chats: React.FC = () => {\n// //   const [searchTerm, setSearchTerm] = useState('');\n// //   const [currentTime, setCurrentTime] = useState('');\n// //   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n// //   const [chatData, setChatData] = useState<Chat[]>([]);\n\n// //   const fetchChatData = async () => {\n// //     try {\n// //       const response = await axios.get('http://localhost:5000/api/chats');\n// //       setChatData(response.data);\n// //     } catch (error) {\n// //       console.error('Error fetching chat data:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchChatData();\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (selectedChat) {\n// //       axios.get('http://localhost:5000/api/messages', {\n// //         params: {\n// //           sender_mobile: selectedChat.mobile,\n// //           receiver_mobile: 'OTHER_MOBILE' // Replace with the actual receiver's mobile\n// //         }\n// //       }).then(response => {\n// //         setChatData(response.data);\n// //       }).catch(error => {\n// //         console.error('Error fetching messages:', error);\n// //       });\n// //     }\n// //   }, [selectedChat]);  \n\n// //   useEffect(() => {\n// //     const now = new Date();\n// //     const options: Intl.DateTimeFormatOptions = {\n// //       hour: '2-digit',\n// //       minute: '2-digit',\n// //       hour12: true,\n// //     };\n// //     const formattedTime = now.toLocaleTimeString([], options);\n// //     setCurrentTime(formattedTime);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     const interval = setInterval(() => {\n// //       fetchChatData(); // Refresh chat data every 30 seconds\n// //     }, 30000);\n\n// //     return () => clearInterval(interval);\n// //   }, []);\n\n// //   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n// //     setSearchTerm(e.target.value);\n// //   };\n\n// //   const handleChatClick = (chat: Chat) => {\n// //     setSelectedChat(chat);\n// //   };\n\n// //   const [senderMobile, setSenderMobile] = useState<string>('1234567890'); // Example mobile number\n// //   const [senderName, setSenderName] = useState<string>('John Doe'); // Example sender name\n\n// //   return (\n// //     <div className='flex h-screen'>\n// //       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n// //         {/* Search Bar */}\n// //         <div className=\"flex justify-center mb-4 mt-3\">\n// //           <input\n// //             type=\"text\"\n// //             value={searchTerm}\n// //             onChange={handleSearchChange}\n// //             placeholder=\"Search here\"\n// //             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n// //           />\n// //           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n// //         </div>\n\n// //         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n// //           <div className=\"flex gap-2.5 font-work-sans\">\n// //             <div className=\"text-green-500\">\n// //               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n// //                 Recent Chats\n// //               </button>\n// //             </div>\n// //             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n// //           </div>\n// //           <div className=\"line text-gray-200\">\n// //             <hr className=\"m-0 w-[93%]\" />\n// //           </div>\n// //         </div>\n\n// //         {/* Scrollable Chat List */}\n// //         <div className=\"flex-1 overflow-y-auto\">\n// //           {chatData\n// //             .filter((chat) =>\n// //               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n// //             )\n// //             .map((chat, index) => (\n// //               <div\n// //                 key={index}\n// //                 onClick={() => handleChatClick(chat)}\n// //                 className=\"cursor-pointer\"\n// //               >\n// //                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n// //                   <div className='flex flex-row items-center'>\n// //                     <div className=\"relative\">\n// //                     <IoPersonCircleSharp className='w-9 h-9' />\n// //                     </div>\n// //                     <div className='flex flex-col ml-1'>\n// //                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n// //                         {chat.name}\n// //                       </div>\n// //                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n// //                     </div>\n// //                     <div className='text-xs ml-6'>{chat.time}</div>\n// //                   </div>\n// //                 </div>\n\n// //                 <div className=\"line ml-6 text-gray-200\">\n// //                   <hr className=\"m-0 w-[93%]\" />\n// //                 </div>\n// //               </div>\n// //             ))}\n// //         </div>\n// //       </div>\n// //       <div className=\"flex-grow h-full\">\n// //       <MessageSystem\n// //           chat={selectedChat}\n\n// //         />\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Chats;\n\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: string; // Use string for mobile\n//   mobileNumber: string; \n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   // Fetch chat data from the API\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedChat) {\n//       axios.get('http://localhost:5000/api/messages', {\n//         params: {\n//           sender_mobile: selectedChat.mobile,\n//           receiver_mobile: 'OTHER_MOBILE' // Replace with actual receiver's mobile\n//         }\n//       }).then(response => {\n//         setChatData(response.data);\n//       }).catch(error => {\n//         console.error('Error fetching messages:', error);\n//       });\n//     }\n//   }, [selectedChat]);\n\n//   // Update current time\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   // Refresh chat data every 30 seconds\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData();\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   const filteredChats = chatData.filter(chat =>\n//     chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {filteredChats.map((chat, index) => (\n//             <div\n//               key={index}\n//               onClick={() => handleChatClick(chat)}\n//               className={`cursor-pointer ${selectedChat?.mobile === chat.mobile ? 'bg-gray-100' : ''}`}\n//             >\n//               <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                 <div className='flex flex-row items-center'>\n//                   <div className=\"relative\">\n//                     <IoPersonCircleSharp className='w-9 h-9' />\n//                   </div>\n//                   <div className='flex flex-col ml-1'>\n//                     <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                       {chat.name}\n//                     </div>\n//                     <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                   </div>\n//                   <div className='text-xs ml-6'>{chat.time}</div>\n//                 </div>\n//               </div>\n//               <div className=\"line ml-6 text-gray-200\">\n//                 <hr className=\"m-0 w-[93%]\" />\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full bg-[#f0f0f0]\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  onChatSelect\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [chatData, setChatData] = useState([]);\n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/chats');\n        setChatData(response.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n      }\n    };\n    fetchChatData();\n  }, []);\n  const filteredChats = chatData.filter(chat => chat.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-1/3 h-full shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-4 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search here\",\n        className: \"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-search absolute right-10 top-3 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-6 z-2 flex flex-col mr-[30%] space-y-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2.5 font-work-sans\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\",\n          children: \"Recent Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\",\n          children: \"All Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line text-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"m-0 w-[93%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: filteredChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onChatSelect(chat),\n        className: \"cursor-pointer bg-white p-4 h-16 mt-1 rounded mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row items-center\",\n          children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-9 h-9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col ml-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs font-semibold\",\n              style: {\n                color: \"#232323\"\n              },\n              children: chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs whitespace-nowrap\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs ml-6\",\n            children: chat.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line ml-6 text-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0 w-[93%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 1\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 1\n  }, this);\n};\n_s(ChatList, \"H81qYTSEc/LGxzZYp+Lc3+Q6N+E=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useState","useEffect","IoPersonCircleSharp","axios","jsxDEV","_jsxDEV","ChatList","onChatSelect","_s","searchTerm","setSearchTerm","chatData","setChatData","fetchChatData","response","get","data","error","console","filteredChats","filter","chat","name","toLowerCase","includes","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","color","message","time","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\n// // import '@fortawesome/fontawesome-free/css/all.min.css';\n// // import axios from 'axios';\n// // import MessageSystem from './MessageSystem';\n// // import { IoPersonCircleSharp } from \"react-icons/io5\";\n// // interface Chat {\n// //   name: string;\n// //   message: string;\n// //   time: string;\n// //   avatar: string;\n// //   status: string;\n// //   mobile: number;\n// //   mobileNumber: string; \n// // }\n\n// // const Chats: React.FC = () => {\n// //   const [searchTerm, setSearchTerm] = useState('');\n// //   const [currentTime, setCurrentTime] = useState('');\n// //   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n// //   const [chatData, setChatData] = useState<Chat[]>([]);\n\n// //   const fetchChatData = async () => {\n// //     try {\n// //       const response = await axios.get('http://localhost:5000/api/chats');\n// //       setChatData(response.data);\n// //     } catch (error) {\n// //       console.error('Error fetching chat data:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchChatData();\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (selectedChat) {\n// //       axios.get('http://localhost:5000/api/messages', {\n// //         params: {\n// //           sender_mobile: selectedChat.mobile,\n// //           receiver_mobile: 'OTHER_MOBILE' // Replace with the actual receiver's mobile\n// //         }\n// //       }).then(response => {\n// //         setChatData(response.data);\n// //       }).catch(error => {\n// //         console.error('Error fetching messages:', error);\n// //       });\n// //     }\n// //   }, [selectedChat]);  \n\n// //   useEffect(() => {\n// //     const now = new Date();\n// //     const options: Intl.DateTimeFormatOptions = {\n// //       hour: '2-digit',\n// //       minute: '2-digit',\n// //       hour12: true,\n// //     };\n// //     const formattedTime = now.toLocaleTimeString([], options);\n// //     setCurrentTime(formattedTime);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     const interval = setInterval(() => {\n// //       fetchChatData(); // Refresh chat data every 30 seconds\n// //     }, 30000);\n\n// //     return () => clearInterval(interval);\n// //   }, []);\n\n// //   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n// //     setSearchTerm(e.target.value);\n// //   };\n\n// //   const handleChatClick = (chat: Chat) => {\n// //     setSelectedChat(chat);\n// //   };\n\n// //   const [senderMobile, setSenderMobile] = useState<string>('1234567890'); // Example mobile number\n// //   const [senderName, setSenderName] = useState<string>('John Doe'); // Example sender name\n\n// //   return (\n// //     <div className='flex h-screen'>\n// //       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n// //         {/* Search Bar */}\n// //         <div className=\"flex justify-center mb-4 mt-3\">\n// //           <input\n// //             type=\"text\"\n// //             value={searchTerm}\n// //             onChange={handleSearchChange}\n// //             placeholder=\"Search here\"\n// //             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n// //           />\n// //           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n// //         </div>\n\n// //         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n// //           <div className=\"flex gap-2.5 font-work-sans\">\n// //             <div className=\"text-green-500\">\n// //               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n// //                 Recent Chats\n// //               </button>\n// //             </div>\n// //             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n// //           </div>\n// //           <div className=\"line text-gray-200\">\n// //             <hr className=\"m-0 w-[93%]\" />\n// //           </div>\n// //         </div>\n\n// //         {/* Scrollable Chat List */}\n// //         <div className=\"flex-1 overflow-y-auto\">\n// //           {chatData\n// //             .filter((chat) =>\n// //               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n// //             )\n// //             .map((chat, index) => (\n// //               <div\n// //                 key={index}\n// //                 onClick={() => handleChatClick(chat)}\n// //                 className=\"cursor-pointer\"\n// //               >\n// //                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n// //                   <div className='flex flex-row items-center'>\n// //                     <div className=\"relative\">\n// //                     <IoPersonCircleSharp className='w-9 h-9' />\n// //                     </div>\n// //                     <div className='flex flex-col ml-1'>\n// //                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n// //                         {chat.name}\n// //                       </div>\n// //                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n// //                     </div>\n// //                     <div className='text-xs ml-6'>{chat.time}</div>\n// //                   </div>\n// //                 </div>\n\n// //                 <div className=\"line ml-6 text-gray-200\">\n// //                   <hr className=\"m-0 w-[93%]\" />\n// //                 </div>\n// //               </div>\n// //             ))}\n// //         </div>\n// //       </div>\n// //       <div className=\"flex-grow h-full\">\n// //       <MessageSystem\n// //           chat={selectedChat}\n          \n// //         />\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Chats;\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: string; // Use string for mobile\n//   mobileNumber: string; \n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   // Fetch chat data from the API\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedChat) {\n//       axios.get('http://localhost:5000/api/messages', {\n//         params: {\n//           sender_mobile: selectedChat.mobile,\n//           receiver_mobile: 'OTHER_MOBILE' // Replace with actual receiver's mobile\n//         }\n//       }).then(response => {\n//         setChatData(response.data);\n//       }).catch(error => {\n//         console.error('Error fetching messages:', error);\n//       });\n//     }\n//   }, [selectedChat]);\n\n//   // Update current time\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   // Refresh chat data every 30 seconds\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData();\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   const filteredChats = chatData.filter(chat =>\n//     chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {filteredChats.map((chat, index) => (\n//             <div\n//               key={index}\n//               onClick={() => handleChatClick(chat)}\n//               className={`cursor-pointer ${selectedChat?.mobile === chat.mobile ? 'bg-gray-100' : ''}`}\n//             >\n//               <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                 <div className='flex flex-row items-center'>\n//                   <div className=\"relative\">\n//                     <IoPersonCircleSharp className='w-9 h-9' />\n//                   </div>\n//                   <div className='flex flex-col ml-1'>\n//                     <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                       {chat.name}\n//                     </div>\n//                     <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                   </div>\n//                   <div className='text-xs ml-6'>{chat.time}</div>\n//                 </div>\n//               </div>\n//               <div className=\"line ml-6 text-gray-200\">\n//                 <hr className=\"m-0 w-[93%]\" />\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full bg-[#f0f0f0]\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport axios from 'axios';\n \ninterface Chat {\n  name: string;\n  message: string;\n  time: string;\n  avatar: string;\n  status: string;\n  mobile: string;\n}\n \ninterface ChatListProps {\n  onChatSelect: (chat: Chat) => void;\n}\n \nconst ChatList: React.FC<ChatListProps> = ({ onChatSelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [chatData, setChatData] = useState<Chat[]>([]);\n \n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/chats');\n        setChatData(response.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n      }\n    };\n \n    fetchChatData();\n  }, []);\n \n  const filteredChats = chatData.filter(chat =>\n    chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n \n  return (\n<div className=\"flex flex-col w-1/3 h-full shadow-md\">\n<div className=\"flex justify-center mb-4 mt-3\">\n<input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Search here\"\n          className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n        />\n<i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n</div>\n<div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n<div className=\"flex gap-2.5 font-work-sans\">\n<button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n            Recent Chats\n</button>\n<button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n</div>\n<div className=\"line text-gray-200\">\n<hr className=\"m-0 w-[93%]\" />\n</div>\n</div>\n<div className=\"flex-1 overflow-y-auto\">\n        {filteredChats.map((chat, index) => (\n<div\n            key={index}\n            onClick={() => onChatSelect(chat)}\n            className=\"cursor-pointer bg-white p-4 h-16 mt-1 rounded mb-1\"\n>\n<div className=\"flex flex-row items-center\">\n<IoPersonCircleSharp className='w-9 h-9' />\n<div className=\"flex flex-col ml-1\">\n<div className='text-xs font-semibold' style={{ color: \"#232323\" }}>{chat.name}</div>\n<div className='text-xs whitespace-nowrap'>{chat.message}</div>\n</div>\n<div className='text-xs ml-6'>{chat.time}</div>\n</div>\n<div className=\"line ml-6 text-gray-200\">\n<hr className=\"m-0 w-[93%]\" />\n</div>\n</div>\n        ))}\n</div>\n</div>\n  );\n};\n \nexport default ChatList;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,iCAAiC,CAAC;QACnEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,aAAa,GAAGR,QAAQ,CAACS,MAAM,CAACC,IAAI,IACxCA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,UAAU,CAACc,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,oBACFlB,OAAA;IAAKoB,SAAS,EAAC,sCAAsC;IAAAC,QAAA,gBACrDrB,OAAA;MAAKoB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC9CrB,OAAA;QACUsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,UAAW;QAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC,aAAa;QACzBP,SAAS,EAAC;MAAmE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACV/B,OAAA;QAAGoB,SAAS,EAAC;MAAoD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACN/B,OAAA;MAAKoB,SAAS,EAAC,2CAA2C;MAAAC,QAAA,gBAC1DrB,OAAA;QAAKoB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC5CrB,OAAA;UAAQoB,SAAS,EAAC,iFAAiF;UAAAC,QAAA,EAAC;QAEpG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/B,OAAA;UAAQoB,SAAS,EAAC,gEAAgE;UAAAC,QAAA,EAAC;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACN/B,OAAA;QAAKoB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACnCrB,OAAA;UAAIoB,SAAS,EAAC;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN/B,OAAA;MAAKoB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAC9BP,aAAa,CAACkB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBACvCjC,OAAA;QAEYkC,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAACc,IAAI,CAAE;QAClCI,SAAS,EAAC,oDAAoD;QAAAC,QAAA,gBAE1ErB,OAAA;UAAKoB,SAAS,EAAC,4BAA4B;UAAAC,QAAA,gBAC3CrB,OAAA,CAACH,mBAAmB;YAACuB,SAAS,EAAC;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3C/B,OAAA;YAAKoB,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACnCrB,OAAA;cAAKoB,SAAS,EAAC,uBAAuB;cAACe,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAf,QAAA,EAAEL,IAAI,CAACC;YAAI;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrF/B,OAAA;cAAKoB,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAEL,IAAI,CAACqB;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACN/B,OAAA;YAAKoB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEL,IAAI,CAACsB;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACN/B,OAAA;UAAKoB,SAAS,EAAC,yBAAyB;UAAAC,QAAA,eACxCrB,OAAA;YAAIoB,SAAS,EAAC;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA,GAdWE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAejB,CACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEN,CAAC;AAAC5B,EAAA,CAnEIF,QAAiC;AAAAsC,EAAA,GAAjCtC,QAAiC;AAqEvC,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}