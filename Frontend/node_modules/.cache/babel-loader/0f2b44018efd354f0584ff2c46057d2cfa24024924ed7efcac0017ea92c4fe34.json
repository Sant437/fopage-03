{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <img className=\"w-12 h-12 rounded-full\" src={chat.avatar} alt={chat.name} />\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Example: Filter messages based on the selected chat\n    if (chat) {\n      // Fetch or filter messages from a server/database for the specific chat\n      // Here we're using dummy data for demonstration\n      setMessages([{\n        name: chat.name,\n        message: 'Hello!',\n        time: '10:00 AM',\n        avatar: '/assets/default-avatar.svg',\n        status: 'online'\n      }, {\n        name: 'User',\n        message: 'Hi there!',\n        time: '10:05 AM',\n        avatar: '/assets/default-avatar.svg',\n        status: 'online'\n      }]);\n    }\n  }, [chat]);\n  const handleSendMessage = () => {\n    if (messageInput.trim() !== '' && chat) {\n      // Simulate sending a message\n      setMessages(prevMessages => [...prevMessages, {\n        name: 'User',\n        message: messageInput,\n        time: new Date().toLocaleTimeString(),\n        avatar: '/assets/default-avatar.svg',\n        status: 'online'\n      }]);\n      setMessageInput('');\n    }\n  };\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: chat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto mb-4\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.name === 'User' ? 'justify-end' : 'justify-start'} mb-2`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center ${message.name === 'User' ? 'bg-blue-100' : 'bg-gray-100'} p-2 rounded-lg`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2 p-2 border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        className: \"flex-grow border rounded-lg p-2\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-lg\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"XOaQvDo4P1/gJpIy9DfH1Ch5uvY=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MessageSystem","chat","_s","messageInput","setMessageInput","messages","setMessages","name","message","time","avatar","status","handleSendMessage","trim","prevMessages","Date","toLocaleTimeString","handleInputChange","e","target","value","handleKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","onChange","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <img className=\"w-12 h-12 rounded-full\" src={chat.avatar} alt={chat.name} />\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\nimport React, { useState, useEffect, ChangeEvent, KeyboardEvent } from 'react';\n\ninterface Chat {\n  name: string;\n  message: string;\n  time: string;\n  avatar: string;\n  status: string;\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Chat[]>([]);\n\n  useEffect(() => {\n    // Example: Filter messages based on the selected chat\n    if (chat) {\n      // Fetch or filter messages from a server/database for the specific chat\n      // Here we're using dummy data for demonstration\n      setMessages([\n        { name: chat.name, message: 'Hello!', time: '10:00 AM', avatar: '/assets/default-avatar.svg', status: 'online' },\n        { name: 'User', message: 'Hi there!', time: '10:05 AM', avatar: '/assets/default-avatar.svg', status: 'online' },\n      ]);\n    }\n  }, [chat]);\n\n  const handleSendMessage = () => {\n    if (messageInput.trim() !== '' && chat) {\n      // Simulate sending a message\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { name: 'User', message: messageInput, time: new Date().toLocaleTimeString(), avatar: '/assets/default-avatar.svg', status: 'online' }\n      ]);\n      setMessageInput('');\n    }\n  };\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n            <span>Select a chat to see messages.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n      {/* Header with chat information */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n          <span>{chat.name}</span>\n        </div>\n      </div>\n\n      {/* Chat messages */}\n      <div className=\"flex-grow overflow-y-auto mb-4\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`flex ${message.name === 'User' ? 'justify-end' : 'justify-start'} mb-2`}\n          >\n            <div className={`flex items-center ${message.name === 'User' ? 'bg-blue-100' : 'bg-gray-100'} p-2 rounded-lg`}>\n              <span>{message.message}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Message input */}\n      <div className=\"flex items-center space-x-2 p-2 border-t\">\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          className=\"flex-grow border rounded-lg p-2\"\n          placeholder=\"Type a message...\"\n        />\n        <button\n          onClick={handleSendMessage}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-lg\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAoC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc/E,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,IAAII,IAAI,EAAE;MACR;MACA;MACAK,WAAW,CAAC,CACV;QAAEC,IAAI,EAAEN,IAAI,CAACM,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,IAAI,EAAE,UAAU;QAAEC,MAAM,EAAE,4BAA4B;QAAEC,MAAM,EAAE;MAAS,CAAC,EAChH;QAAEJ,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE,WAAW;QAAEC,IAAI,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}