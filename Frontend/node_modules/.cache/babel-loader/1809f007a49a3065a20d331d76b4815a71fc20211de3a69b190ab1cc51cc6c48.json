{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   senderMobile: string; // Pass sender's mobile number as a prop\n//   senderName: string;   // Pass sender's name as a prop\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, senderMobile, senderName }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${senderMobile}&receiver_mobile=${chat?.name}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, senderMobile]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: senderMobile,\n//         receiver_mobile: chat?.name || '',\n//         sender_name: senderName,\n//         receiver_name: chat?.name || '',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: senderMobile,\n//         receiver_mobile: chat?.name || '',\n//         sender_name: senderName,\n//         receiver_name: chat?.name || '',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === senderName ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== senderName && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === senderName ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === senderName && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from 'react-icons/io5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (chat !== null && chat !== void 0 && chat.id) {\n        try {\n          const response = await axios.get(`/api/messages/chat/${chat.id}`);\n          setMessages(response.data);\n        } catch (error) {\n          console.error('Failed to fetch messages:', error);\n        }\n      }\n    };\n    fetchMessages();\n  }, [chat === null || chat === void 0 ? void 0 : chat.id]);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      const formData = new FormData();\n      formData.append('chatId', (chat === null || chat === void 0 ? void 0 : chat.id.toString()) || '');\n      formData.append('senderName', (chat === null || chat === void 0 ? void 0 : chat.name) || 'User');\n      formData.append('message', messageInput);\n      formData.append('time', formattedTime);\n      formData.append('status', (chat === null || chat === void 0 ? void 0 : chat.status) || 'offline');\n      if (file) {\n        formData.append('file', file);\n      }\n      try {\n        await axios.post('/api/messages/send', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setMessages([...messages, {\n          chat_id: (chat === null || chat === void 0 ? void 0 : chat.id) || 0,\n          sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n          message: messageInput,\n          time: formattedTime,\n          status: (chat === null || chat === void 0 ? void 0 : chat.status) || 'offline',\n          file_url: file ? `/uploads/${file.name}` : null\n        }]);\n        setMessageInput('');\n        setFile(null);\n      } catch (error) {\n        console.error('Failed to send message:', error);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-14 h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`,\n            children: chat.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'justify-end' : ''} mb-4`,\n        children: [msg.sender_name !== (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.file_url,\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'items-end' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\",\n            children: [msg.message, msg.file_url && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: msg.file_url,\n              className: \"text-xs text-blue-500\",\n              children: \"View file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 float-right\",\n              style: {\n                position: 'relative',\n                top: '-5px',\n                marginRight: '10px'\n              },\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.file_url,\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 48\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        className: \"hidden\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n          src: \"/assets/add.svg\",\n          alt: \"Plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        className: \"flex-grow p-2 border rounded\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"njwbAv11+gLLeTtvd0mXjyZv2+c=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useEffect","useState","axios","IoPersonCircleSharp","jsxDEV","_jsxDEV","MessageSystem","chat","_s","messageInput","setMessageInput","messages","setMessages","file","setFile","fetchMessages","id","response","get","data","error","console","handleInputChange","e","target","value","handleSendMessage","trim","now","Date","options","hour","minute","hour12","formattedTime","toLocaleTimeString","formData","FormData","append","toString","name","status","post","headers","chat_id","sender_name","message","time","file_url","handleFileChange","selectedFile","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","src","alt","href","style","position","top","marginRight","type","onChange","htmlFor","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   senderMobile: string; // Pass sender's mobile number as a prop\n//   senderName: string;   // Pass sender's name as a prop\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, senderMobile, senderName }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${senderMobile}&receiver_mobile=${chat?.name}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, senderMobile]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: senderMobile,\n//         receiver_mobile: chat?.name || '',\n//         sender_name: senderName,\n//         receiver_name: chat?.name || '',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: senderMobile,\n//         receiver_mobile: chat?.name || '',\n//         sender_name: senderName,\n//         receiver_name: chat?.name || '',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === senderName ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== senderName && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === senderName ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === senderName && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from 'react-icons/io5';\n\ninterface Chat {\n  id: number;\n  name: string;\n  avatar: string;\n  status: string;\n}\n\ninterface Message {\n  id: number;\n  chat_id: number;\n  sender_name: string;\n  message: string;\n  time: string;\n  status: string;\n  file_url: string;\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [file, setFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (chat?.id) {\n        try {\n          const response = await axios.get(`/api/messages/chat/${chat.id}`);\n          setMessages(response.data);\n        } catch (error) {\n          console.error('Failed to fetch messages:', error);\n        }\n      }\n    };\n\n    fetchMessages();\n  }, [chat?.id]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n\n      const formData = new FormData();\n      formData.append('chatId', chat?.id.toString() || '');\n      formData.append('senderName', chat?.name || 'User');\n      formData.append('message', messageInput);\n      formData.append('time', formattedTime);\n      formData.append('status', chat?.status || 'offline');\n      if (file) {\n        formData.append('file', file);\n      }\n\n      try {\n        await axios.post('/api/messages/send', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        setMessages([...messages, {\n          chat_id: chat?.id || 0,\n          sender_name: chat?.name || 'User',\n          message: messageInput,\n          time: formattedTime,\n          status: chat?.status || 'offline',\n          file_url: file ? `/uploads/${file.name}` : null,\n        }]);\n        setMessageInput('');\n        setFile(null);\n      } catch (error) {\n        console.error('Failed to send message:', error);\n      }\n    }\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n            <span>Select a chat to see messages.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n      {/* Header with chat information */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n          <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n          <div>\n            <span className='font-medium'>{chat.name}</span>\n            <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n              {chat.status}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Message area */}\n      <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n        {/* Display messages */}\n        {messages.map((msg) => (\n          <div key={msg.id} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n            {msg.sender_name !== chat?.name && <img src={msg.file_url} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n            <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n              <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n                {msg.message}\n                {msg.file_url && <a href={msg.file_url} className=\"text-xs text-blue-500\">View file</a>}\n                <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n                  {msg.time}\n                </span>\n              </p>\n            </div>\n            {msg.sender_name === chat?.name && <img src={msg.file_url} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n          </div>\n        ))}\n      </div>\n\n      {/* Input area */}\n      <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          className=\"hidden\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"file-input\">\n          <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n        </label>\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={handleInputChange}\n          className=\"flex-grow p-2 border rounded\"\n          placeholder=\"Type a message...\"\n        />\n        <button\n          onClick={handleSendMessage}\n          className=\"ml-2 p-2 bg-blue-500 text-white rounded\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}