{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Fetch messages when chat changes\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput(''); // Clear input after sending\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null); // Clear the file after sending\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault(); // Prevent the default behavior of the Enter key\n//       handleSendMessage(); // Call the send message function\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown} // Add key down event handler\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat,\n  sender_mobile,\n  receiver_mobile\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    if (chat) {\n      // Fetch messages when chat changes\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages? sender_mobile=${pro}&receiver_mobile=${receiverMobile}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetchingsender_mobile messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [chat]);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      console.log(`chat?.name`, chat === null || chat === void 0 ? void 0 : chat.name);\n      console.log(`chat?.name`, chat === null || chat === void 0 ? void 0 : chat.name);\n      const newMessage = {\n        sender_mobile: 'senderMobile',\n        // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile',\n        // Replace with actual receiver mobile\n        sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: messageInput,\n        time: formattedTime\n      };\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setMessageInput(''); // Clear input after sending\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      const newMessage = {\n        sender_mobile: \"9952635807\",\n        // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile',\n        // Replace with actual receiver mobile\n        sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime\n      };\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setFile(null); // Clear the file after sending\n      } catch (error) {\n        console.error('Error sending file message:', error);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key\n      handleSendMessage(); // Call the send message function\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-14 h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`,\n            children: chat.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'justify-end' : ''} mb-4`,\n        children: [msg.sender_name !== (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default-avatar.svg',\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'items-end' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\",\n            children: [msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 float-right\",\n              style: {\n                position: 'relative',\n                top: '-5px',\n                marginRight: '10px'\n              },\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default-avatar.svg',\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 48\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        className: \"hidden\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n          src: \"/assets/add.svg\",\n          alt: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        placeholder: \"Type Here\",\n        onKeyDown: handleKeyDown // Add key down event handler\n        ,\n        className: \"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleSendMessage,\n        className: \"p-2 bg-white w-14 h-14 cursor-pointer\",\n        src: \"/assets/sendbutton.svg\",\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"njwbAv11+gLLeTtvd0mXjyZv2+c=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","IoPersonCircleSharp","jsxDEV","_jsxDEV","MessageSystem","chat","sender_mobile","receiver_mobile","_s","messageInput","setMessageInput","messages","setMessages","file","setFile","fetchMessages","response","fetch","pro","receiverMobile","data","json","error","console","handleInputChange","e","target","value","handleSendMessage","trim","now","Date","options","hour","minute","hour12","formattedTime","toLocaleTimeString","log","name","newMessage","sender_name","receiver_name","message","time","method","headers","body","JSON","stringify","handleFileChange","selectedFile","files","handleKeyDown","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","map","msg","index","src","avatar","alt","style","position","top","marginRight","type","id","onChange","htmlFor","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Fetch messages when chat changes\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput(''); // Clear input after sending\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null); // Clear the file after sending\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault(); // Prevent the default behavior of the Enter key\n//       handleSendMessage(); // Call the send message function\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown} // Add key down event handler\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect, KeyboardEvent } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\n\ninterface Chat {\n  name: string;\n  avatar: string;\n  status: string;\n}\n\ninterface Message {\n  sender_mobile: string;\n  receiver_mobile: string;\n  sender_name: string;\n  receiver_name: string;\n  message: string;\n  time: string;\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n  sender_mobile: string;\n  receiver_mobile: string;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat,sender_mobile,receiver_mobile }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [file, setFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    if (chat) {\n      // Fetch messages when chat changes\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages? sender_mobile=${pro}&receiver_mobile=${receiverMobile}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetchingsender_mobile messages:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [chat]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\nconsole.log(`chat?.name`,chat?.name);\nconsole.log(`chat?.name`,chat?.name)\n\n      const newMessage = {\n        sender_mobile: 'senderMobile', // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n        sender_name: chat?.name || 'User',\n        receiver_name: chat?.name || 'User',\n        message: messageInput,\n        time: formattedTime,\n      };\n\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(newMessage),\n        });\n        setMessages([...messages, newMessage]);\n        setMessageInput(''); // Clear input after sending\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n\n      const newMessage = {\n        sender_mobile: \"9952635807\", // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n        sender_name: chat?.name || 'User',\n        receiver_name: chat?.name || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime,\n      };\n\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(newMessage),\n        });\n        setMessages([...messages, newMessage]);\n        setFile(null); // Clear the file after sending\n      } catch (error) {\n        console.error('Error sending file message:', error);\n      }\n    }\n  };\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key\n      handleSendMessage(); // Call the send message function\n    }\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n            <span>Select a chat to see messages.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n      {/* Header with chat information */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n          <div><IoPersonCircleSharp className='w-14 h-14' /></div>\n          <div>\n            <span className='font-medium'>{chat.name}</span>\n            <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n              {chat.status}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Message area */}\n      <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n        {/* Display messages */}\n        {messages.map((msg, index) => (\n          <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n            {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n            <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n              <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n                {msg.message}\n                <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n                  {msg.time}\n                </span>\n              </p>\n            </div>\n            {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n          </div>\n        ))}\n      </div>\n\n      {/* Input area */}\n      <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          className=\"hidden\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"file-input\">\n          <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n        </label>\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={handleInputChange}\n          placeholder=\"Type Here\"\n          onKeyDown={handleKeyDown} // Add key down event handler\n          className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n        />\n        <img\n          onClick={handleSendMessage}\n          className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n          src=\"/assets/sendbutton.svg\"\n          alt=\"Send\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}