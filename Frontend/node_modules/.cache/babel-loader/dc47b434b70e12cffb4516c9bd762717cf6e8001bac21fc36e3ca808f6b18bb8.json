{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat,\n  socket\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (chat) {\n      axios.get('http://localhost:5000/api/messages', {\n        params: {\n          sender_mobile: chat.mobileNumber,\n          receiver_mobile: chat.receiver_mobile\n        }\n      }).then(response => {\n        setMessages(response.data);\n      }).catch(error => {\n        console.error('Error fetching messages:', error);\n      });\n    }\n  }, [chat]);\n  useEffect(() => {\n    socket.on('message', messageData => {\n      if (chat && (messageData.sender_mobile === chat.mobileNumber || messageData.receiver_mobile === chat.mobileNumber)) {\n        setMessages(prevMessages => [...prevMessages, messageData]);\n      }\n    });\n    return () => {\n      socket.off('message');\n    };\n  }, [chat, socket]);\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (message.trim()) {\n      const messageData = {\n        sender_mobile: chat === null || chat === void 0 ? void 0 : chat.mobileNumber,\n        receiver_mobile: chat === null || chat === void 0 ? void 0 : chat.receiver_mobile,\n        sender_name: chat === null || chat === void 0 ? void 0 : chat.name,\n        receiver_name: chat === null || chat === void 0 ? void 0 : chat.receiver_name,\n        message,\n        time: new Date().toLocaleTimeString()\n      };\n      socket.emit('sendMessage', messageData);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center justify-between p-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n          className: \"w-10 h-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2 text-lg font-medium\",\n          children: chat === null || chat === void 0 ? void 0 : chat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs\",\n        children: new Date().toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.sender_mobile === (chat === null || chat === void 0 ? void 0 : chat.mobileNumber) ? 'text-right' : 'text-left'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-block px-4 py-2 rounded-lg ${msg.sender_mobile === (chat === null || chat === void 0 ? void 0 : chat.mobileNumber) ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: msg.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: handleMessageChange,\n        placeholder: \"Type a message\",\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"hayBObzYBK7vs/Kob316cSgNGIw=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","IoPersonCircleSharp","axios","jsxDEV","_jsxDEV","MessageSystem","chat","socket","_s","messages","setMessages","message","setMessage","get","params","sender_mobile","mobileNumber","receiver_mobile","then","response","data","catch","error","console","on","messageData","prevMessages","off","handleMessageChange","e","target","value","handleSendMessage","trim","sender_name","name","receiver_name","time","Date","toLocaleTimeString","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport axios from 'axios';\nimport { Chat } from '../types';\nimport io from 'socket.io-client';\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n  socket: any;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat, socket }) => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (chat) {\n      axios.get('http://localhost:5000/api/messages', {\n        params: {\n          sender_mobile: chat.mobileNumber,\n          receiver_mobile: chat.receiver_mobile\n        }\n      })\n      .then(response => {\n        setMessages(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching messages:', error);\n      });\n    }\n  }, [chat]);\n\n  useEffect(() => {\n    socket.on('message', (messageData) => {\n      if (chat && (messageData.sender_mobile === chat.mobileNumber || messageData.receiver_mobile === chat.mobileNumber)) {\n        setMessages(prevMessages => [...prevMessages, messageData]);\n      }\n    });\n\n    return () => {\n      socket.off('message');\n    };\n  }, [chat, socket]);\n\n  const handleMessageChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim()) {\n      const messageData = {\n        sender_mobile: chat?.mobileNumber,\n        receiver_mobile: chat?.receiver_mobile,\n        sender_name: chat?.name,\n        receiver_name: chat?.receiver_name,\n        message,\n        time: new Date().toLocaleTimeString()\n      };\n\n      socket.emit('sendMessage', messageData);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"flex flex-row items-center justify-between p-4 border-b\">\n        <div className=\"flex items-center\">\n          <IoPersonCircleSharp className='w-10 h-10' />\n          <div className=\"ml-2 text-lg font-medium\">{chat?.name}</div>\n        </div>\n        <div className=\"text-xs\">{new Date().toLocaleTimeString()}</div>\n      </div>\n\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`mb-2 ${msg.sender_mobile === chat?.mobileNumber ? 'text-right' : 'text-left'}`}>\n            <div className={`inline-block px-4 py-2 rounded-lg ${msg.sender_mobile === chat?.mobileNumber ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>\n              {msg.message}\n            </div>\n            <div className=\"text-xs text-gray-500\">{msg.time}</div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"p-4 border-t\">\n        <textarea\n          value={message}\n          onChange={handleMessageChange}\n          placeholder=\"Type a message\"\n          className=\"w-full p-2 border rounded\"\n        />\n        <button\n          onClick={handleSendMessage}\n          className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAQ,EAAE,CAAC;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,EAAE;MACRJ,KAAK,CAACW,GAAG,CAAC,oCAAoC,EAAE;QAC9CC,MAAM,EAAE;UACNC,aAAa,EAAET,IAAI,CAACU,YAAY;UAChCC,eAAe,EAAEX,IAAI,CAACW;QACxB;MACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;QAChBT,WAAW,CAACS,QAAQ,CAACC,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEVN,SAAS,CAAC,MAAM;IACdO,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAGC,WAAW,IAAK;MACpC,IAAInB,IAAI,KAAKmB,WAAW,CAACV,aAAa,KAAKT,IAAI,CAACU,YAAY,IAAIS,WAAW,CAACR,eAAe,KAAKX,IAAI,CAACU,YAAY,CAAC,EAAE;QAClHN,WAAW,CAACgB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,WAAW,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXlB,MAAM,CAACoB,GAAG,CAAC,SAAS,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACrB,IAAI,EAAEC,MAAM,CAAC,CAAC;EAElB,MAAMqB,mBAAmB,GAAIC,CAAyC,IAAK;IACzEjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIrB,OAAO,CAACsB,IAAI,CAAC,CAAC,EAAE;MAClB,MAAMR,WAAW,GAAG;QAClBV,aAAa,EAAET,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,YAAY;QACjCC,eAAe,EAAEX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,eAAe;QACtCiB,WAAW,EAAE5B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE6B,IAAI;QACvBC,aAAa,EAAE9B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE8B,aAAa;QAClCzB,OAAO;QACP0B,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MACtC,CAAC;MAEDhC,MAAM,CAACiC,IAAI,CAAC,aAAa,EAAEf,WAAW,CAAC;MACvCb,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACER,OAAA;IAAKqC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCtC,OAAA;MAAKqC,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACtEtC,OAAA;QAAKqC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCtC,OAAA,CAACH,mBAAmB;UAACwC,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7C1C,OAAA;UAAKqC,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAEpC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE6B;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eAEN1C,OAAA;MAAKqC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EACxCjC,QAAQ,CAACsC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB7C,OAAA;QAAiBqC,SAAS,EAAE,QAAQO,GAAG,CAACjC,aAAa,MAAKT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,YAAY,IAAG,YAAY,GAAG,WAAW,EAAG;QAAA0B,QAAA,gBAC1GtC,OAAA;UAAKqC,SAAS,EAAE,qCAAqCO,GAAG,CAACjC,aAAa,MAAKT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,YAAY,IAAG,wBAAwB,GAAG,aAAa,EAAG;UAAA0B,QAAA,EACxIM,GAAG,CAACrC;QAAO;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACN1C,OAAA;UAAKqC,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEM,GAAG,CAACX;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAJ/CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1C,OAAA;MAAKqC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtC,OAAA;QACE2B,KAAK,EAAEpB,OAAQ;QACfuC,QAAQ,EAAEtB,mBAAoB;QAC9BuB,WAAW,EAAC,gBAAgB;QAC5BV,SAAS,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACF1C,OAAA;QACEgD,OAAO,EAAEpB,iBAAkB;QAC3BS,SAAS,EAAC,+CAA+C;QAAAC,QAAA,EAC1D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA1FIH,aAA2C;AAAAgD,EAAA,GAA3ChD,aAA2C;AA4FjD,eAAeA,aAAa;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}