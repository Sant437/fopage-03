{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   useEffect(() => {\n//     const fetchChatData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/chats');\n//         // Assuming response data is an array of chat objects\n//         setChatData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching chat data:', error);\n//       }\n//     };\n\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col  mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\" flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n// src/component/Chats.tsx\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-medium' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\nimport React, { useState, useEffect } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport MessageSystem from './MessageSystem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to WebSocket server\n\nconst Chats = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentTime, setCurrentTime] = useState('');\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [chatData, setChatData] = useState([]);\n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/chats');\n        setChatData(response.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n      }\n    };\n    fetchChatData();\n  }, []);\n  useEffect(() => {\n    // Get current time\n    const now = new Date();\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    };\n    const formattedTime = now.toLocaleTimeString([], options);\n    setCurrentTime(formattedTime);\n  }, []);\n  useEffect(() => {\n    // WebSocket message handler\n    socket.on('newUser', data => {\n      const newChat = {\n        name: data.name,\n        message: 'New user added',\n        time: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true\n        }),\n        avatar: 'default-avatar.png',\n        // Replace with default avatar or URL\n        status: 'active'\n      };\n      setChatData(prevChatData => [...prevChatData, newChat]);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      socket.off('newUser');\n    };\n  }, [socket]);\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleChatClick = chat => {\n    setSelectedChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-4 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          placeholder: \"Search here\",\n          className: \"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search absolute right-10 top-3 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-6 z-2 flex flex-col mr-[30%] space-y-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2.5 font-work-sans\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-500\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\",\n              children: \"Recent Chats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\",\n            children: \"All Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line text-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0 w-[93%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto\",\n        children: chatData.filter(chat => chat.name.toLowerCase().includes(searchTerm.toLowerCase())).map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleChatClick(chat),\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-4 h-16 mt-1 rounded mb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"w-8 h-8 ml-2\",\n                  src: chat.avatar,\n                  alt: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col ml-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs font-semibold\",\n                  style: {\n                    color: \"#232323\"\n                  },\n                  children: chat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs whitespace-nowrap\",\n                  children: chat.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs ml-6\",\n                children: chat.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line ml-6 text-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0 w-[93%]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow h-full\",\n      children: /*#__PURE__*/_jsxDEV(MessageSystem, {\n        chat: selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"NTisNTxsnsEptH7pAatFxYm2mws=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","MessageSystem","jsxDEV","_jsxDEV","socket","Chats","_s","searchTerm","setSearchTerm","currentTime","setCurrentTime","selectedChat","setSelectedChat","chatData","setChatData","fetchChatData","response","get","data","error","console","now","Date","options","hour","minute","hour12","formattedTime","toLocaleTimeString","on","newChat","name","message","time","avatar","status","prevChatData","off","handleSearchChange","e","target","value","handleChatClick","chat","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","filter","toLowerCase","includes","map","index","onClick","src","alt","style","color","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   useEffect(() => {\n//     const fetchChatData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/chats');\n//         // Assuming response data is an array of chat objects\n//         setChatData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching chat data:', error);\n//       }\n//     };\n\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col  mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\" flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n\n\n// src/component/Chats.tsx\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-medium' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\nimport React, { useState, useEffect } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport MessageSystem from './MessageSystem';\n\ninterface Chat {\n  name: string;\n  message: string;\n  time: string;\n  avatar: string;\n  status: string;\n}\n\nconst socket = io('http://localhost:5000'); // Connect to WebSocket server\n\nconst Chats: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentTime, setCurrentTime] = useState('');\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [chatData, setChatData] = useState<Chat[]>([]);\n\n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/chats');\n        setChatData(response.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n      }\n    };\n\n    fetchChatData();\n  }, []);\n\n  useEffect(() => {\n    // Get current time\n    const now = new Date();\n    const options: Intl.DateTimeFormatOptions = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n    };\n    const formattedTime = now.toLocaleTimeString([], options);\n    setCurrentTime(formattedTime);\n  }, []);\n\n  useEffect(() => {\n    // WebSocket message handler\n    socket.on('newUser', (data: { mobileNumber: string; name: string }) => {\n      const newChat: Chat = {\n        name: data.name,\n        message: 'New user added',\n        time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true }),\n        avatar: 'default-avatar.png', // Replace with default avatar or URL\n        status: 'active',\n      };\n      setChatData((prevChatData) => [...prevChatData, newChat]);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      socket.off('newUser');\n    };\n  }, [socket]);\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleChatClick = (chat: Chat) => {\n    setSelectedChat(chat);\n  };\n\n  return (\n    <div className='flex h-screen'>\n      <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n        {/* Search Bar */}\n        <div className=\"flex justify-center mb-4 mt-3\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            placeholder=\"Search here\"\n            className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n          />\n          <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n        </div>\n\n        <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n          <div className=\"flex gap-2.5 font-work-sans\">\n            <div className=\"text-green-500\">\n              <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n                Recent Chats\n              </button>\n            </div>\n            <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n          </div>\n          <div className=\"line text-gray-200\">\n            <hr className=\"m-0 w-[93%]\" />\n          </div>\n        </div>\n\n        {/* Scrollable Chat List */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {chatData\n            .filter((chat) =>\n              chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n            )\n            .map((chat, index) => (\n              <div\n                key={index}\n                onClick={() => handleChatClick(chat)}\n                className=\"cursor-pointer\"\n              >\n                <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n                  <div className='flex flex-row items-center'>\n                    <div className=\"relative\">\n                      <img\n                        className=\"w-8 h-8 ml-2\"\n                        src={chat.avatar}\n                        alt=\"Profile\"\n                      />\n                    </div>\n                    <div className='flex flex-col ml-1'>\n                      <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n                        {chat.name}\n                      </div>\n                      <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n                    </div>\n                    <div className='text-xs ml-6'>{chat.time}</div>\n                  </div>\n                </div>\n\n                <div className=\"line ml-6 text-gray-200\">\n                  <hr className=\"m-0 w-[93%]\" />\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"flex-grow h-full\">\n        <MessageSystem chat={selectedChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default Chats;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}