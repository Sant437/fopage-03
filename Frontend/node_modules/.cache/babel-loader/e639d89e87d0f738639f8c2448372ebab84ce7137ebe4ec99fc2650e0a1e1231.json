{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Fetch messages when chat changes\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput(''); // Clear input after sending\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null); // Clear the file after sending\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault(); // Prevent the default behavior of the Enter key\n//       handleSendMessage(); // Call the send message function\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input \n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown} // Add key down event handler\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Fetch messages when chat changes\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput(''); // Clear input after sending\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null); // Clear the file after sending\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault(); // Prevent the default behavior of the Enter key\n//       handleSendMessage(); // Call the send message function\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown} // Add key down event handler\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\nconst MessageSystem = ({\n  chat\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    if (chat) {\n      // Fetch messages when chat changes\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n\n    // Socket.IO event for receiving messages\n    socket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [chat]);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      const newMessage = {\n        sender_mobile: 'senderMobile',\n        // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile',\n        // Replace with actual receiver mobile\n        sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: messageInput,\n        time: formattedTime\n      };\n\n      // Emit message via Socket.IO\n      socket.emit('sendMessage', newMessage);\n      setMessageInput(''); // Clear input after sending\n    }\n  };\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      const newMessage = {\n        sender_mobile: 'senderMobile',\n        // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile',\n        // Replace with actual receiver mobile\n        sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime\n      };\n\n      // Emit file message via Socket.IO\n      socket.emit('sendMessage', newMessage);\n      setFile(null); // Clear the file after sending\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key\n      handleSendMessage(); // Call the send message function\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-14 h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`,\n            children: chat.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'justify-end' : ''} mb-4`,\n        children: [msg.sender_name !== (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default-avatar.svg',\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'items-end' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\",\n            children: [msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 float-right\",\n              style: {\n                position: 'relative',\n                top: '-5px',\n                marginRight: '10px'\n              },\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default-avatar.svg',\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 48\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        className: \"hidden\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n          src: \"/assets/add.svg\",\n          alt: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        placeholder: \"Type Here\",\n        onKeyDown: handleKeyDown // Add key down event handler\n        ,\n        className: \"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleSendMessage,\n        className: \"p-2 bg-white w-14 h-14 cursor-pointer\",\n        src: \"/assets/sendbutton.svg\",\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"njwbAv11+gLLeTtvd0mXjyZv2+c=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","IoPersonCircleSharp","io","jsxDEV","_jsxDEV","socket","MessageSystem","chat","_s","messageInput","setMessageInput","messages","setMessages","file","setFile","fetchMessages","response","fetch","data","json","error","console","on","message","prevMessages","off","handleInputChange","e","target","value","handleSendMessage","trim","now","Date","options","hour","minute","hour12","formattedTime","toLocaleTimeString","newMessage","sender_mobile","receiver_mobile","sender_name","name","receiver_name","time","emit","handleFileChange","selectedFile","files","handleKeyDown","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","map","msg","index","src","avatar","alt","style","position","top","marginRight","type","id","onChange","htmlFor","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n  // import React, { useState, useEffect, KeyboardEvent } from 'react';\n  // import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n  // interface Chat {\n  //   name: string;\n  //   avatar: string;\n  //   status: string;\n  // }\n\n  // interface Message {\n  //   sender_mobile: string;\n  //   receiver_mobile: string;\n  //   sender_name: string;\n  //   receiver_name: string;\n  //   message: string;\n  //   time: string;\n  // }\n\n  // interface MessageSystemProps {\n  //   chat: Chat | null;\n  // }\n\n  // const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  //   const [messageInput, setMessageInput] = useState('');\n  //   const [messages, setMessages] = useState<Message[]>([]);\n  //   const [file, setFile] = useState<File | null>(null);\n\n  //   useEffect(() => {\n  //     if (chat) {\n  //       // Fetch messages when chat changes\n  //       const fetchMessages = async () => {\n  //         try {\n  //           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n  //           const data = await response.json();\n  //           setMessages(data);\n  //         } catch (error) {\n  //           console.error('Error fetching messages:', error);\n  //         }\n  //       };\n\n  //       fetchMessages();\n  //     }\n  //   }, [chat]);\n\n  //   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setMessageInput(e.target.value);\n  //   };\n\n  //   const handleSendMessage = async () => {\n  //     if (messageInput.trim()) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n\n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: messageInput,\n  //         time: formattedTime,\n  //       };\n\n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setMessageInput(''); // Clear input after sending\n  //       } catch (error) {\n  //         console.error('Error sending message:', error);\n  //       }\n  //     }\n  //   };\n\n  //   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     const selectedFile = e.target.files ? e.target.files[0] : null;\n  //     if (selectedFile) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n\n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: `Sent a file: ${selectedFile.name}`,\n  //         time: formattedTime,\n  //       };\n\n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setFile(null); // Clear the file after sending\n  //       } catch (error) {\n  //         console.error('Error sending file message:', error);\n  //       }\n  //     }\n  //   };\n\n  //   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n  //     if (e.key === 'Enter') {\n  //       e.preventDefault(); // Prevent the default behavior of the Enter key\n  //       handleSendMessage(); // Call the send message function\n  //     }\n  //   };\n\n  //   if (!chat) {\n  //     return (\n  //       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n  //         <div className=\"flex justify-between items-center mb-4\">\n  //           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n  //             <span>Select a chat to see messages.</span>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n\n  //   return (\n  //     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n  //       {/* Header with chat information */}\n  //       <div className=\"flex justify-between items-center mb-4\">\n  //         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n  //           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n  //           <div>\n  //             <span className='font-medium'>{chat.name}</span>\n  //             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n  //               {chat.status}\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n\n  //       {/* Message area */}\n  //       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n  //         {/* Display messages */}\n  //         {messages.map((msg, index) => (\n  //           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n  //             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n  //             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n  //               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n  //                 {msg.message}\n  //                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n  //                   {msg.time}\n  //                 </span>\n  //               </p>\n  //             </div>\n  //             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n  //           </div>\n  //         ))}\n  //       </div>\n\n  //       {/* Input area */}\n  //       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n  //         <input\n  //           type=\"file\"\n  //           id=\"file-input\"\n  //           className=\"hidden\"\n  //           onChange={handleFileChange}\n  //         />\n  //         <label htmlFor=\"file-input\">\n  //           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n  //         </label>\n  //         <input \n  //           type=\"text\"\n  //           value={messageInput}\n  //           onChange={handleInputChange}\n  //           placeholder=\"Type Here\"\n  //           onKeyDown={handleKeyDown} // Add key down event handler\n  //           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n  //         />\n  //         <img\n  //           onClick={handleSendMessage}\n  //           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n  //           src=\"/assets/sendbutton.svg\"\n  //           alt=\"Send\"\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  // export default MessageSystem;\n\n\n\n\n\n\n\n\n\n  // import React, { useState, useEffect, KeyboardEvent } from 'react';\n  // import { IoPersonCircleSharp } from \"react-icons/io5\";\n \n  // interface Chat {\n  //   name: string;\n  //   avatar: string;\n  //   status: string;\n  // }\n \n  // interface Message {\n  //   sender_mobile: string;\n  //   receiver_mobile: string;\n  //   sender_name: string;\n  //   receiver_name: string;\n  //   message: string;\n  //   time: string;\n  // }\n \n  // interface MessageSystemProps {\n  //   chat: Chat | null;\n  // }\n \n  // const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  //   const [messageInput, setMessageInput] = useState('');\n  //   const [messages, setMessages] = useState<Message[]>([]);\n  //   const [file, setFile] = useState<File | null>(null);\n \n  //   useEffect(() => {\n  //     if (chat) {\n  //       // Fetch messages when chat changes\n  //       const fetchMessages = async () => {\n  //         try {\n  //           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n  //           const data = await response.json();\n  //           setMessages(data);\n  //         } catch (error) {\n  //           console.error('Error fetching messages:', error);\n  //         }\n  //       };\n \n  //       fetchMessages();\n  //     }\n  //   }, [chat]);\n \n  //   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setMessageInput(e.target.value);\n  //   };\n \n  //   const handleSendMessage = async () => {\n  //     if (messageInput.trim()) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n \n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: messageInput,\n  //         time: formattedTime,\n  //       };\n \n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setMessageInput(''); // Clear input after sending\n  //       } catch (error) {\n  //         console.error('Error sending message:', error);\n  //       }\n  //     }\n  //   };\n \n  //   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     const selectedFile = e.target.files ? e.target.files[0] : null;\n  //     if (selectedFile) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n \n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: `Sent a file: ${selectedFile.name}`,\n  //         time: formattedTime,\n  //       };\n \n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setFile(null); // Clear the file after sending\n  //       } catch (error) {\n  //         console.error('Error sending file message:', error);\n  //       }\n  //     }\n  //   };\n \n  //   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n  //     if (e.key === 'Enter') {\n  //       e.preventDefault(); // Prevent the default behavior of the Enter key\n  //       handleSendMessage(); // Call the send message function\n  //     }\n  //   };\n \n  //   if (!chat) {\n  //     return (\n  //       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n  //         <div className=\"flex justify-between items-center mb-4\">\n  //           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n  //             <span>Select a chat to see messages.</span>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n \n  //   return (\n  //     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n  //       {/* Header with chat information */}\n  //       <div className=\"flex justify-between items-center mb-4\">\n  //         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n  //           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n  //           <div>\n  //             <span className='font-medium'>{chat.name}</span>\n  //             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n  //               {chat.status}\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n \n  //       {/* Message area */}\n  //       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n  //         {/* Display messages */}\n  //         {messages.map((msg, index) => (\n  //           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n  //             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n  //             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n  //               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n  //                 {msg.message}\n  //                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n  //                   {msg.time}\n  //                 </span>\n  //               </p>\n  //             </div>\n  //             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n  //           </div>\n  //         ))}\n  //       </div>\n \n  //       {/* Input area */}\n  //       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n  //         <input\n  //           type=\"file\"\n  //           id=\"file-input\"\n  //           className=\"hidden\"\n  //           onChange={handleFileChange}\n  //         />\n  //         <label htmlFor=\"file-input\">\n  //           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n  //         </label>\n  //         <input\n  //           type=\"text\"\n  //           value={messageInput}\n  //           onChange={handleInputChange}\n  //           placeholder=\"Type Here\"\n  //           onKeyDown={handleKeyDown} // Add key down event handler\n  //           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n  //         />\n  //         <img\n  //           onClick={handleSendMessage}\n  //           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n  //           src=\"/assets/sendbutton.svg\"\n  //           alt=\"Send\"\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // };\n \n  // export default MessageSystem;\n\n\n\n\n\n\n\n  import React, { useState, useEffect, KeyboardEvent } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport io from 'socket.io-client';\n\ninterface Chat {\n  name: string;\n  avatar: string;\n  status: string;\n}\n\ninterface Message {\n  sender_mobile: string;\n  receiver_mobile: string;\n  sender_name: string;\n  receiver_name: string;\n  message: string;\n  time: string;\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n}\n\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [file, setFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    if (chat) {\n      // Fetch messages when chat changes\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n\n    // Socket.IO event for receiving messages\n    socket.on('receiveMessage', (message: Message) => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [chat]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n\n      const newMessage = {\n        sender_mobile: 'senderMobile', // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n        sender_name: chat?.name || 'User',\n        receiver_name: chat?.name || 'User',\n        message: messageInput,\n        time: formattedTime,\n      };\n\n      // Emit message via Socket.IO\n      socket.emit('sendMessage', newMessage);\n\n      setMessageInput(''); // Clear input after sending\n    }\n  };\n\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n\n      const newMessage = {\n        sender_mobile: 'senderMobile', // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n        sender_name: chat?.name || 'User',\n        receiver_name: chat?.name || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime,\n      };\n\n      // Emit file message via Socket.IO\n      socket.emit('sendMessage', newMessage);\n\n      setFile(null); // Clear the file after sending\n    }\n  };\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key\n      handleSendMessage(); // Call the send message function\n    }\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n            <span>Select a chat to see messages.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n      {/* Header with chat information */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n          <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n          <div>\n            <span className='font-medium'>{chat.name}</span>\n            <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n              {chat.status}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Message area */}\n      <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n        {/* Display messages */}\n        {messages.map((msg, index) => (\n          <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n            {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n            <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n              <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n                {msg.message}\n                <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n                  {msg.time}\n                </span>\n              </p>\n            </div>\n            {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n          </div>\n        ))}\n      </div>\n\n      {/* Input area */}\n      <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          className=\"hidden\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"file-input\">\n          <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n        </label>\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={handleInputChange}\n          placeholder=\"Type Here\"\n          onKeyDown={handleKeyDown} // Add key down event handler\n          className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n        />\n        <img\n          onClick={handleSendMessage}\n          className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n          src=\"/assets/sendbutton.svg\"\n          alt=\"Send\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}