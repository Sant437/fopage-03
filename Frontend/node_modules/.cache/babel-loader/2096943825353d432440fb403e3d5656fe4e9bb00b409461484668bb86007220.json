{"ast":null,"code":"var _jsxFileName = \"/media/dell/6EB86CA1B86C6A13/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// import { io, Socket } from 'socket.io-client'; // Import Socket.IO client\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n//   mobileNumber: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   currentUserMobile: string;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n//   const socketRef = useRef<Socket | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, currentUserMobile]);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Initialize WebSocket connection\n//       socketRef.current = io('http://localhost:5000'); // Replace with your backend WebSocket URL\n\n//       // Listen for incoming messages\n//       socketRef.current.on('receiveMessage', (newMessage: Message) => {\n//         setMessages(prevMessages => [...prevMessages, newMessage]);\n//       });\n\n//       return () => {\n//         socketRef.current?.disconnect();\n//       };\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         second: '2-digit',       // Include seconds in the formatted time\n//         hour12: true,            // Use 12-hour format with AM/PM\n//         timeZone: 'Asia/Kolkata' // Set the time zone to IST (Indian Standard Time)\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'vinoth', // Replace with actual sender name\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         // Send message through WebSocket\n//         socketRef.current?.emit('sendMessage', newMessage);\n\n//         // Optionally, also save the message in the backend\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//          setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: chat?.name || 'User', // Replace with actual sender name\n//         receiver_name: 'vinoth',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         // Send file message through WebSocket\n//         socketRef.current?.emit('sendMessage', newMessage);\n\n//         // Optionally, also save the message in the backend\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   messages.map((re)=>{\n//     console.log(\"currentUserMobile\",re.receiver_mobile,currentUserMobile);\n//   })\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <IoPersonCircleSharp className='w-14 h-14 ml-7 mt-3' />\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex w-full ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mb-4`}>   \n//             {msg.sender_mobile !== currentUserMobile && <img src={chat.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`}>\n//               <p className=\"bg-white p-2 w-[350px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_mobile === currentUserMobile && <img src={chat.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-8 h-8 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { io } from 'socket.io-client'; // Import Socket.IO client\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat,\n  currentUserMobile\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (chat) {\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [chat, currentUserMobile]);\n  useEffect(() => {\n    if (chat) {\n      // Initialize Socket.IO connection\n      socketRef.current = io('http://localhost:5000'); // Replace with your backend Socket.IO URL\n\n      // Listen for incoming messages\n      socketRef.current.on('receiveMessage', newMessage => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n      return () => {\n        var _socketRef$current;\n        (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.disconnect();\n      };\n    }\n  }, [chat]);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        // Include seconds in the formatted time\n        hour12: true,\n        // Use 12-hour format with AM/PM\n        timeZone: 'Asia/Kolkata' // Set the time zone to IST (Indian Standard Time)\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n      const newMessage = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: (chat === null || chat === void 0 ? void 0 : chat.mobileNumber) || '',\n        sender_name: 'vinoth',\n        // Replace with actual sender name\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: messageInput,\n        time: formattedTime\n      };\n      try {\n        var _socketRef$current2;\n        // Send message through Socket.IO\n        (_socketRef$current2 = socketRef.current) === null || _socketRef$current2 === void 0 ? void 0 : _socketRef$current2.emit('sendMessage', newMessage);\n\n        // Optionally, also save the message in the backend\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center p-3 bg-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n          className: \"w-12 h-12 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xl font-bold\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: chat.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-3 space-y-4\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${msg.sender_mobile === currentUserMobile ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'} rounded-lg p-3 max-w-xs`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400\",\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 rounded-lg border border-gray-300\",\n          placeholder: \"Type a message...\",\n          value: messageInput,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"2Rxdf2T5TgLGKNlno21Ly07Cehg=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","IoPersonCircleSharp","io","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageSystem","chat","currentUserMobile","_s","messageInput","setMessageInput","messages","setMessages","socketRef","fetchMessages","response","fetch","mobileNumber","data","json","error","console","current","on","newMessage","prevMessages","_socketRef$current","disconnect","handleInputChange","e","target","value","handleSendMessage","trim","now","Date","options","hour","minute","second","hour12","timeZone","formattedTime","toLocaleTimeString","sender_mobile","receiver_mobile","sender_name","receiver_name","name","message","time","_socketRef$current2","emit","method","headers","body","JSON","stringify","handleKeyPress","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","map","msg","index","type","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/media/dell/6EB86CA1B86C6A13/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// import { io, Socket } from 'socket.io-client'; // Import Socket.IO client\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n//   mobileNumber: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   currentUserMobile: string;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n//   const socketRef = useRef<Socket | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, currentUserMobile]);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Initialize WebSocket connection\n//       socketRef.current = io('http://localhost:5000'); // Replace with your backend WebSocket URL\n\n//       // Listen for incoming messages\n//       socketRef.current.on('receiveMessage', (newMessage: Message) => {\n//         setMessages(prevMessages => [...prevMessages, newMessage]);\n//       });\n\n//       return () => {\n//         socketRef.current?.disconnect();\n//       };\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         second: '2-digit',       // Include seconds in the formatted time\n//         hour12: true,            // Use 12-hour format with AM/PM\n//         timeZone: 'Asia/Kolkata' // Set the time zone to IST (Indian Standard Time)\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n      \n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'vinoth', // Replace with actual sender name\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         // Send message through WebSocket\n//         socketRef.current?.emit('sendMessage', newMessage);\n\n//         // Optionally, also save the message in the backend\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//          setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: chat?.name || 'User', // Replace with actual sender name\n//         receiver_name: 'vinoth',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         // Send file message through WebSocket\n//         socketRef.current?.emit('sendMessage', newMessage);\n\n//         // Optionally, also save the message in the backend\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   messages.map((re)=>{\n//     console.log(\"currentUserMobile\",re.receiver_mobile,currentUserMobile);\n//   })\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <IoPersonCircleSharp className='w-14 h-14 ml-7 mt-3' />\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex w-full ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mb-4`}>   \n//             {msg.sender_mobile !== currentUserMobile && <img src={chat.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`}>\n//               <p className=\"bg-white p-2 w-[350px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_mobile === currentUserMobile && <img src={chat.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-8 h-8 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n\n//       </div>\n      \n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\nimport React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { io, Socket } from 'socket.io-client'; // Import Socket.IO client\n\ninterface Chat {\n  name: string;\n  avatar: string;\n  status: string;\n  mobileNumber: string;\n}\n\ninterface Message {\n  sender_mobile: string;\n  receiver_mobile: string;\n  sender_name: string;\n  receiver_name: string;\n  message: string;\n  time: string;\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n  currentUserMobile: string;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const socketRef = useRef<Socket | null>(null);\n\n  useEffect(() => {\n    if (chat) {\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [chat, currentUserMobile]);\n\n  useEffect(() => {\n    if (chat) {\n      // Initialize Socket.IO connection\n      socketRef.current = io('http://localhost:5000'); // Replace with your backend Socket.IO URL\n\n      // Listen for incoming messages\n      socketRef.current.on('receiveMessage', (newMessage: Message) => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n\n      return () => {\n        socketRef.current?.disconnect();\n      };\n    }\n  }, [chat]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',       // Include seconds in the formatted time\n        hour12: true,            // Use 12-hour format with AM/PM\n        timeZone: 'Asia/Kolkata' // Set the time zone to IST (Indian Standard Time)\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n\n      const newMessage: Message = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: chat?.mobileNumber || '',\n        sender_name: 'vinoth', // Replace with actual sender name\n        receiver_name: chat?.name || 'User',\n        message: messageInput,\n        time: formattedTime,\n      };\n\n      try {\n        // Send message through Socket.IO\n        socketRef.current?.emit('sendMessage', newMessage);\n\n        // Optionally, also save the message in the backend\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(newMessage),\n        });\n\n        setMessages([...messages, newMessage]);\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleKeyPress = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {chat ? (\n        <>\n          <div className=\"flex items-center p-3 bg-gray-200\">\n            <IoPersonCircleSharp className=\"w-12 h-12 text-gray-500\" />\n            <div className=\"ml-3\">\n              <div className=\"text-xl font-bold\">{chat.name}</div>\n              <div className=\"text-sm text-gray-600\">{chat.status}</div>\n            </div>\n          </div>\n\n          <div className=\"flex-1 overflow-y-auto p-3 space-y-4\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`${\n                    msg.sender_mobile === currentUserMobile ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\n                  } rounded-lg p-3 max-w-xs`}\n                >\n                  <div className=\"text-sm\">{msg.message}</div>\n                  <div className=\"text-xs text-gray-400\">{msg.time}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"p-3 bg-gray-200\">\n            <input\n              type=\"text\"\n              className=\"w-full p-2 rounded-lg border border-gray-300\"\n              placeholder=\"Type a message...\"\n              value={messageInput}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n            />\n          </div>\n        </>\n      ) : (\n        <div className=\"flex items-center justify-center h-full\">\n          <p className=\"text-gray-500\">Select a chat to start messaging</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAuB,OAAO;AACzE,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,SAASC,EAAE,QAAgB,kBAAkB,CAAC,CAAC;AAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}