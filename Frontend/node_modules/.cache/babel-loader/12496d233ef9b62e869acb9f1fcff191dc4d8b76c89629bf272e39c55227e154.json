{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: number;\n//   mobileNumber: string; \n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedChat) {\n//       axios.get('http://localhost:5000/api/messages', {\n//         params: {\n//           sender_mobile: selectedChat.mobile,\n//           receiver_mobile: 'OTHER_MOBILE' // Replace with the actual receiver's mobile\n//         }\n//       }).then(response => {\n//         setChatData(response.data);\n//       }).catch(error => {\n//         console.error('Error fetching messages:', error);\n//       });\n//     }\n//   }, [selectedChat]);  \n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   const [senderMobile, setSenderMobile] = useState<string>('1234567890'); // Example mobile number\n//   const [senderName, setSenderName] = useState<string>('John Doe'); // Example sender name\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                     <IoPersonCircleSharp className='w-9 h-9' />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//       <MessageSystem\n//           chat={selectedChat}\n\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n// \n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: string; // Changed from number to string\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   const filteredChats = chatData.filter(chat =>\n//     chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"flex flex-row w-full\">\n//       <div className=\"w-[400px] flex-none bg-[#ffffff] p-4\">\n//         {/* Search bar */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//           className=\"w-full p-2 border rounded-lg outline-none mb-4\"\n//         />\n\n//         {/* List of chats */}\n//         {filteredChats.map((chat, index) => (\n//           <div\n//             key={index}\n//             className={`flex items-center p-2 border-b cursor-pointer ${selectedChat?.mobile === chat.mobile ? 'bg-gray-100' : ''}`}\n//             onClick={() => setSelectedChat(chat)}\n//           >\n//             <IoPersonCircleSharp className='w-10 h-10' />\n//             <div className=\"ml-3\">\n//               <p className=\"text-lg font-semibold\">{chat.name}</p>\n//               <p className=\"text-sm text-gray-500\">{chat.message}</p>\n//               <p className=\"text-xs text-gray-400\">{chat.time}</p>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"flex-grow bg-[#f0f0f0]\">\n//         <MessageSystem\n//           chat={selectedChat}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n// export default Chats;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport MessageSystem from './MessageInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = ({\n  onSelectChat\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [chatData, setChatData] = useState([]);\n  const fetchChatData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/chats');\n      setChatData(response.data);\n    } catch (error) {\n      console.error('Error fetching chat data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchChatData();\n  }, []);\n  const filteredChats = chatData.filter(chat => chat.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[400px] flex-none bg-[#ffffff] p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"w-full p-2 border rounded-lg outline-none mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), filteredChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center p-2 border-b cursor-pointer ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.mobile) === chat.mobile ? 'bg-gray-100' : ''}`,\n        onClick: () => {\n          setSelectedChat(chat);\n          onSelectChat(chat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n          className: \"w-10 h-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-semibold\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-400\",\n            children: chat.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(MessageSystem, {\n        chat: selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"0VGQQoyVdSoQ2fBunAKNX5C/PMM=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","axios","IoPersonCircleSharp","MessageSystem","jsxDEV","_jsxDEV","Chats","onSelectChat","_s","searchTerm","setSearchTerm","selectedChat","setSelectedChat","chatData","setChatData","fetchChatData","response","get","data","error","console","filteredChats","filter","chat","name","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","mobile","onClick","message","time","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: number;\n//   mobileNumber: string; \n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedChat) {\n//       axios.get('http://localhost:5000/api/messages', {\n//         params: {\n//           sender_mobile: selectedChat.mobile,\n//           receiver_mobile: 'OTHER_MOBILE' // Replace with the actual receiver's mobile\n//         }\n//       }).then(response => {\n//         setChatData(response.data);\n//       }).catch(error => {\n//         console.error('Error fetching messages:', error);\n//       });\n//     }\n//   }, [selectedChat]);  \n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   const [senderMobile, setSenderMobile] = useState<string>('1234567890'); // Example mobile number\n//   const [senderName, setSenderName] = useState<string>('John Doe'); // Example sender name\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                     <IoPersonCircleSharp className='w-9 h-9' />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//       <MessageSystem\n//           chat={selectedChat}\n          \n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n\n\n\n\n\n\n\n// \n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n//   mobile: string; // Changed from number to string\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   const filteredChats = chatData.filter(chat =>\n//     chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"flex flex-row w-full\">\n//       <div className=\"w-[400px] flex-none bg-[#ffffff] p-4\">\n//         {/* Search bar */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//           className=\"w-full p-2 border rounded-lg outline-none mb-4\"\n//         />\n\n//         {/* List of chats */}\n//         {filteredChats.map((chat, index) => (\n//           <div\n//             key={index}\n//             className={`flex items-center p-2 border-b cursor-pointer ${selectedChat?.mobile === chat.mobile ? 'bg-gray-100' : ''}`}\n//             onClick={() => setSelectedChat(chat)}\n//           >\n//             <IoPersonCircleSharp className='w-10 h-10' />\n//             <div className=\"ml-3\">\n//               <p className=\"text-lg font-semibold\">{chat.name}</p>\n//               <p className=\"text-sm text-gray-500\">{chat.message}</p>\n//               <p className=\"text-xs text-gray-400\">{chat.time}</p>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"flex-grow bg-[#f0f0f0]\">\n//         <MessageSystem\n//           chat={selectedChat}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n// export default Chats;\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport MessageSystem from './MessageInfo';\ninterface Chat {\n  name: string;\n  message: string;\n  time: string;\n  avatar: string;\n  status: string;\n  mobile: string;\n}\n\ninterface ChatsProps {\n  onSelectChat: (chat: Chat) => void;\n}\n\nconst Chats: React.FC<ChatsProps> = ({ onSelectChat }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [chatData, setChatData] = useState<Chat[]>([]);\n\n  const fetchChatData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/chats');\n      setChatData(response.data);\n    } catch (error) {\n      console.error('Error fetching chat data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchChatData();\n  }, []);\n\n  const filteredChats = chatData.filter(chat =>\n    chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"flex flex-row w-full\">\n      <div className=\"w-[400px] flex-none bg-[#ffffff] p-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"w-full p-2 border rounded-lg outline-none mb-4\"\n        />\n        {filteredChats.map((chat, index) => (\n          <div\n            key={index}\n            className={`flex items-center p-2 border-b cursor-pointer ${selectedChat?.mobile === chat.mobile ? 'bg-gray-100' : ''}`}\n            onClick={() => {\n              setSelectedChat(chat);\n              onSelectChat(chat);\n            }}\n          >\n            <IoPersonCircleSharp className='w-10 h-10' />\n            <div className=\"ml-3\">\n              <p className=\"text-lg font-semibold\">{chat.name}</p>\n              <p className=\"text-sm text-gray-500\">{chat.message}</p>\n              <p className=\"text-xs text-gray-400\">{chat.time}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"flex-grow\">\n          <MessageSystem chat={selectedChat} />\n        </div>\n    </div>\n  );\n};\n\nexport default Chats;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}