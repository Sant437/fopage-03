{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s2 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n\n//   useEffect(() => {\n//     if (chat) {\n//       // Fetch messages when chat changes\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n//           const data = await response.json();\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat]);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setMessageInput(''); // Clear input after sending\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n//         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n//         sender_name: chat?.name || 'User',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//       };\n\n//       try {\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n//         setMessages([...messages, newMessage]);\n//         setFile(null); // Clear the file after sending\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault(); // Prevent the default behavior of the Enter key\n//       handleSendMessage(); // Call the send message function\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input \n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown} // Add key down event handler\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [file, setFile] = useState(null);\n  console.log(\"chat\", chat);\n  useEffect(() => {\n    if (chat) {\n      // Fetch messages when chat changes\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=9952635807&receiver_mobile=${chat.mobileNumber}`);\n          const data = await response.json();\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [chat]);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    _s();\n    if (messageInput.trim()) {\n      const now = new Date();\n      useEffect(() => {\n        const now = new Date();\n        const formattedTime = new Intl.DateTimeFormat('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: false,\n          // Set to false for 24-hour format\n          timeZone: 'UTC' // Set the timezone to UTC\n        }).format(now);\n        setCurrentTime(formattedTime);\n      }, []);\n      const newMessage = {\n        sender_mobile: '9952635807',\n        // Replace with actual sender mobile\n        receiver_mobile: chat === null || chat === void 0 ? void 0 : chat.mobileNumber,\n        // Replace with actual receiver mobile\n        sender_name: 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: messageInput,\n        time: formattedTime\n      };\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setMessageInput(''); // Clear input after sending\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  _s(handleSendMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const formattedTime = now.toLocaleTimeString([], options);\n      const newMessage = {\n        sender_mobile: 'senderMobile',\n        // Replace with actual sender mobile\n        receiver_mobile: 'receiverMobile',\n        // Replace with actual receiver mobile\n        sender_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime\n      };\n      try {\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setFile(null); // Clear the file after sending\n      } catch (error) {\n        console.error('Error sending file message:', error);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key\n      handleSendMessage(); // Call the send message function\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-14 h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`,\n            children: chat.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'justify-end' : ''} mb-4`,\n        children: [msg.sender_name !== (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default_avatar.png',\n          alt: msg.sender_name,\n          className: \"w-10 h-10 rounded-full mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col ${msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'items-end' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\",\n            children: [msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 float-right\",\n              style: {\n                position: 'relative',\n                top: '-5px',\n                marginRight: '10px'\n              },\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 15\n        }, this), msg.sender_name === (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (chat === null || chat === void 0 ? void 0 : chat.avatar) || '/assets/default_avatar.png',\n          alt: msg.sender_name,\n          className: \"w-8 h-8 rounded-full ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 50\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        className: \"hidden\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n          src: \"/assets/add.svg\",\n          alt: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        placeholder: \"Type Here\",\n        onKeyDown: handleKeyDown // Add key down event handler\n        ,\n        className: \"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleSendMessage,\n        className: \"p-2 bg-white w-14 h-14 cursor-pointer\",\n        src: \"/assets/sendbutton.svg\",\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 7\n  }, this);\n};\n_s2(MessageSystem, \"njwbAv11+gLLeTtvd0mXjyZv2+c=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","IoPersonCircleSharp","jsxDEV","_jsxDEV","MessageSystem","chat","_s2","_s","$RefreshSig$","messageInput","setMessageInput","messages","setMessages","file","setFile","console","log","fetchMessages","response","fetch","mobileNumber","data","json","error","handleInputChange","e","target","value","handleSendMessage","trim","now","Date","formattedTime","Intl","DateTimeFormat","hour","minute","second","hour12","timeZone","format","setCurrentTime","newMessage","sender_mobile","receiver_mobile","sender_name","receiver_name","name","message","time","method","headers","body","JSON","stringify","handleFileChange","selectedFile","files","options","toLocaleTimeString","handleKeyDown","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","map","msg","index","src","avatar","alt","style","position","top","marginRight","type","id","onChange","htmlFor","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n  // import React, { useState, useEffect, KeyboardEvent } from 'react';\n  // import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n  // interface Chat {\n  //   name: string;\n  //   avatar: string;\n  //   status: string;\n  // }\n\n  // interface Message {\n  //   sender_mobile: string;\n  //   receiver_mobile: string;\n  //   sender_name: string;\n  //   receiver_name: string;\n  //   message: string;\n  //   time: string;\n  // }\n\n  // interface MessageSystemProps {\n  //   chat: Chat | null;\n  // }\n\n  // const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n  //   const [messageInput, setMessageInput] = useState('');\n  //   const [messages, setMessages] = useState<Message[]>([]);\n  //   const [file, setFile] = useState<File | null>(null);\n\n  //   useEffect(() => {\n  //     if (chat) {\n  //       // Fetch messages when chat changes\n  //       const fetchMessages = async () => {\n  //         try {\n  //           const response = await fetch(`/api/messages?sender_mobile=${'senderMobile'}&receiver_mobile=${'receiverMobile'}`);\n  //           const data = await response.json();\n  //           setMessages(data);\n  //         } catch (error) {\n  //           console.error('Error fetching messages:', error);\n  //         }\n  //       };\n\n  //       fetchMessages();\n  //     }\n  //   }, [chat]);\n\n  //   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setMessageInput(e.target.value);\n  //   };\n\n  //   const handleSendMessage = async () => {\n  //     if (messageInput.trim()) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n\n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: messageInput,\n  //         time: formattedTime,\n  //       };\n\n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setMessageInput(''); // Clear input after sending\n  //       } catch (error) {\n  //         console.error('Error sending message:', error);\n  //       }\n  //     }\n  //   };\n\n  //   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     const selectedFile = e.target.files ? e.target.files[0] : null;\n  //     if (selectedFile) {\n  //       const now = new Date();\n  //       const options: Intl.DateTimeFormatOptions = {\n  //         hour: '2-digit',\n  //         minute: '2-digit',\n  //         hour12: true,\n  //       };\n  //       const formattedTime = now.toLocaleTimeString([], options);\n\n  //       const newMessage = {\n  //         sender_mobile: 'senderMobile', // Replace with actual sender mobile\n  //         receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n  //         sender_name: chat?.name || 'User',\n  //         receiver_name: chat?.name || 'User',\n  //         message: `Sent a file: ${selectedFile.name}`,\n  //         time: formattedTime,\n  //       };\n\n  //       try {\n  //         await fetch('/api/messages', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(newMessage),\n  //         });\n  //         setMessages([...messages, newMessage]);\n  //         setFile(null); // Clear the file after sending\n  //       } catch (error) {\n  //         console.error('Error sending file message:', error);\n  //       }\n  //     }\n  //   };\n\n  //   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n  //     if (e.key === 'Enter') {\n  //       e.preventDefault(); // Prevent the default behavior of the Enter key\n  //       handleSendMessage(); // Call the send message function\n  //     }\n  //   };\n\n  //   if (!chat) {\n  //     return (\n  //       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n  //         <div className=\"flex justify-between items-center mb-4\">\n  //           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n  //             <span>Select a chat to see messages.</span>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n\n  //   return (\n  //     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n  //       {/* Header with chat information */}\n  //       <div className=\"flex justify-between items-center mb-4\">\n  //         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n  //           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n  //           <div>\n  //             <span className='font-medium'>{chat.name}</span>\n  //             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n  //               {chat.status}\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n\n  //       {/* Message area */}\n  //       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n  //         {/* Display messages */}\n  //         {messages.map((msg, index) => (\n  //           <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n  //             {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n  //             <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n  //               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n  //                 {msg.message}\n  //                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n  //                   {msg.time}\n  //                 </span>\n  //               </p>\n  //             </div>\n  //             {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default-avatar.svg'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full ml-2\" />}\n  //           </div>\n  //         ))}\n  //       </div>\n\n  //       {/* Input area */}\n  //       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n  //         <input\n  //           type=\"file\"\n  //           id=\"file-input\"\n  //           className=\"hidden\"\n  //           onChange={handleFileChange}\n  //         />\n  //         <label htmlFor=\"file-input\">\n  //           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n  //         </label>\n  //         <input \n  //           type=\"text\"\n  //           value={messageInput}\n  //           onChange={handleInputChange}\n  //           placeholder=\"Type Here\"\n  //           onKeyDown={handleKeyDown} // Add key down event handler\n  //           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n  //         />\n  //         <img\n  //           onClick={handleSendMessage}\n  //           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n  //           src=\"/assets/sendbutton.svg\"\n  //           alt=\"Send\"\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  // export default MessageSystem;\n\n\n\n\n\n\n\n\n\n  import React, { useState, useEffect, KeyboardEvent } from 'react';\n  import { IoPersonCircleSharp } from \"react-icons/io5\";\n \n  interface Chat {\n    name: string;\n    avatar: string;\n    status: string;\n    mobileNumber:any;\n  }\n \n  interface Message {\n    sender_mobile: string;\n    receiver_mobile: string;\n    sender_name: string;\n    receiver_name: string;\n    message: string;\n    time: string;\n  }\n \n  interface MessageSystemProps {\n    chat: Chat | null;\n  }\n \n  const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n    const [messageInput, setMessageInput] = useState('');\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [file, setFile] = useState<File | null>(null);\n   console.log(\"chat\",chat);\n    useEffect(() => {\n      if (chat) {\n        // Fetch messages when chat changes\n        const fetchMessages = async () => {\n          try {\n            const response = await fetch(`/api/messages?sender_mobile=9952635807&receiver_mobile=${chat.mobileNumber}`);\n            const data = await response.json();\n            setMessages(data);\n          } catch (error) {\n            console.error('Error fetching messages:', error);\n          }\n        };\n \n        fetchMessages();\n      }\n    }, [chat]);\n \n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setMessageInput(e.target.value);\n    };\n \n    const handleSendMessage = async () => {\n      if (messageInput.trim()) {\n        const now = new Date();\n        useEffect(() => {\n          const now = new Date();\n          const formattedTime = new Intl.DateTimeFormat('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false,      // Set to false for 24-hour format\n            timeZone: 'UTC',    // Set the timezone to UTC\n          }).format(now);\n        \n          setCurrentTime(formattedTime);\n        \n        }, []);\n        \n        const newMessage = {\n          sender_mobile: '9952635807', // Replace with actual sender mobile\n          receiver_mobile: chat?.mobileNumber, // Replace with actual receiver mobile\n          sender_name:'User',\n          receiver_name: chat?.name || 'User',\n          message: messageInput,\n          time: formattedTime,\n        };\n \n        try {\n          await fetch('/api/messages', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newMessage),\n          });\n          setMessages([...messages, newMessage]);\n          setMessageInput(''); // Clear input after sending\n        } catch (error) {\n          console.error('Error sending message:', error);\n        }\n      }\n    };\n \n    const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n      const selectedFile = e.target.files ? e.target.files[0] : null;\n      if (selectedFile) {\n        const now = new Date();\n        const options: Intl.DateTimeFormatOptions = {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true,\n        };\n        const formattedTime = now.toLocaleTimeString([], options);\n \n        const newMessage = {\n          sender_mobile: 'senderMobile', // Replace with actual sender mobile\n          receiver_mobile: 'receiverMobile', // Replace with actual receiver mobile\n          sender_name: chat?.name || 'User',\n          receiver_name: chat?.name || 'User',\n          message: `Sent a file: ${selectedFile.name}`,\n          time: formattedTime,\n        };\n \n        try {\n          await fetch('/api/messages', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newMessage),\n          });\n          setMessages([...messages, newMessage]);\n          setFile(null); // Clear the file after sending\n        } catch (error) {\n          console.error('Error sending file message:', error);\n        }\n      }\n    };\n \n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        e.preventDefault(); // Prevent the default behavior of the Enter key\n        handleSendMessage(); // Call the send message function\n      }\n    };\n \n    if (!chat) {  \n      return (\n        <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n              <span>Select a chat to see messages.</span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n \n    return (\n      <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n        {/* Header with chat information */}\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n            <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n            <div>\n              <span className='font-medium'>{chat.name}</span>\n              <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n                {chat.status}\n              </div>\n            </div>\n          </div>\n        </div>\n \n        {/* Message area */}\n        <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n          {/* Display messages */}\n          {messages.map((msg, index) => (\n            <div key={index} className={`flex ${msg.sender_name === chat?.name ? 'justify-end' : ''} mb-4`}>\n              {msg.sender_name !== chat?.name && <img src={chat?.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-10 h-10 rounded-full mr-2\" />}\n              <div className={`flex flex-col ${msg.sender_name === chat?.name ? 'items-end' : ''}`}>\n                <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n                  {msg.message}\n                  <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n                    {msg.time}\n                  </span>\n                </p>\n              </div>\n              {msg.sender_name === chat?.name && <img src={chat?.avatar || '/assets/default_avatar.png'} alt={msg.sender_name} className=\"w-8 h-8 rounded-full ml-2\" />}\n            </div>\n          ))}\n        </div>\n \n        {/* Input area */}\n        <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n          <input\n            type=\"file\"\n            id=\"file-input\"\n            className=\"hidden\"\n            onChange={handleFileChange}\n          />\n          <label htmlFor=\"file-input\">\n            <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n          </label>\n          <input\n            type=\"text\"\n            value={messageInput}\n            onChange={handleInputChange}\n            placeholder=\"Type Here\"\n            onKeyDown={handleKeyDown} // Add key down event handler\n            className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n          />\n          <img\n            onClick={handleSendMessage}\n            className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n            src=\"/assets/sendbutton.svg\"\n            alt=\"Send\"\n          />\n        </div>\n      </div>\n    );\n  };\n \n  export default MessageSystem;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}