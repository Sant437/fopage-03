{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n// import React, { useState, useEffect, ChangeEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]);\n//   const [socket, setSocket] = useState<WebSocket | null>(null);\n\n//   useEffect(() => {\n//     const ws = new WebSocket('ws://localhost:8080'); // Replace with your WebSocket server URL\n//     setSocket(ws);\n\n//     ws.onmessage = (event) => {\n//       const incomingMessage = JSON.parse(event.data);\n//       setMessages((prevMessages) => [...prevMessages, incomingMessage]);\n//     };\n\n//     return () => {\n//       ws.close();\n//     };\n//   }, []);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       socket?.send(JSON.stringify(newMessage));\n//       setMessageInput('');\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   function handleFileChange(event: ChangeEvent<HTMLInputElement>): void {\n//     throw new Error('Function not implemented.');\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState('');\n  const [chat, setChat] = useState(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socket.current = new WebSocket('ws://localhost:3001');\n\n    // Listen for messages from the server\n    socket.current.onmessage = async event => {\n      let data;\n      if (event.data instanceof Blob) {\n        data = await event.data.text();\n      } else {\n        data = event.data;\n      }\n      try {\n        const msg = JSON.parse(data);\n        if (msg.userId !== userId) {\n          // Avoid duplicating the sent message\n          setMessages(prevMessages => [...prevMessages, msg]);\n        }\n      } catch (error) {\n        console.error('Failed to parse message:', error);\n      }\n    };\n\n    // Clean up on component unmount\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [userId]);\n  const register = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/register', {\n        username,\n        password\n      });\n      setUserId(response.data.userId);\n      setChat({\n        name: username,\n        message: '',\n        time: '',\n        avatar: '/assets/default-avatar.svg',\n        status: 'offline'\n      });\n      setError('');\n    } catch (error) {\n      setError('Registration failed. Please try again.');\n      console.error('Failed to register:', error);\n    }\n  };\n  const login = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        username,\n        password\n      });\n      setUserId(response.data.userId);\n      setChat({\n        name: username,\n        message: '',\n        time: '',\n        avatar: '/assets/default-avatar.svg',\n        status: 'offline'\n      });\n      setError('');\n    } catch (error) {\n      setError('Invalid username or password.');\n      console.error('Failed to login:', error);\n    }\n  };\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      var _socket$current;\n      const timestamp = new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const msg = {\n        name: username,\n        message,\n        time: timestamp,\n        avatar: '/assets/default-avatar.svg',\n        status: 'online'\n      };\n      (_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, msg]);\n      setMessage('');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key (like form submission)\n      sendMessage();\n    }\n  };\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded shadow-md p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Login / Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border border-gray-300 rounded p-2 w-full mb-2\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border border-gray-300 rounded p-2 w-full mb-2\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 text-white rounded p-2 w-40 mb-2 mr-2\",\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 text-white rounded p-2 w-40\",\n            onClick: register,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mt-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n            className: \"w-14 h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: chat === null || chat === void 0 ? void 0 : chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-xs ${(chat === null || chat === void 0 ? void 0 : chat.status) === 'Online' ? 'text-green-500' : 'text-gray-500'}`,\n              children: chat === null || chat === void 0 ? void 0 : chat.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'justify-end' : ''} mb-4`,\n          children: [msg.name !== (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.avatar,\n            alt: msg.name,\n            className: \"w-10 h-10 rounded-full mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col ${msg.name === (chat === null || chat === void 0 ? void 0 : chat.name) ? 'items-end' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\",\n              children: [msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500 float-right\",\n                style: {\n                  position: 'relative',\n                  top: '-5px',\n                  marginRight: '10px'\n                },\n                children: msg.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), msg.name === (chat === null || chat === void 0 ? void 0 : chat.name) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.avatar,\n            alt: msg.name,\n            className: \"w-10 h-10 rounded-full ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 43\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-input\",\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n            src: \"/assets/add.svg\",\n            alt: \"Plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type Here\",\n          className: \"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: sendMessage,\n          className: \"p-2 bg-white w-14 h-14 cursor-pointer\",\n          src: \"/assets/sendbutton.svg\",\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7u0+C65H3K0EHZ2A6Fk0aDvTvWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","IoPersonCircleSharp","jsxDEV","_jsxDEV","App","_s","userId","setUserId","username","setUsername","password","setPassword","message","setMessage","messages","setMessages","error","setError","chat","setChat","socket","current","WebSocket","onmessage","event","data","Blob","text","msg","JSON","parse","prevMessages","console","close","register","response","post","name","time","avatar","status","login","sendMessage","trim","_socket$current","timestamp","Date","toLocaleTimeString","hour","minute","send","stringify","handleKeyDown","e","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","map","index","src","alt","style","position","top","marginRight","id","htmlFor","onKeyDown","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string; // Added status field\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]); // Array to store messages\n//   const [file, setFile] = useState<File | null>(null); // State to handle file\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setMessageInput(''); // Clear input after sending\n//     }\n//   };\n\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       setMessages([...messages, newMessage]);\n//       setFile(null); // Clear the file after sending\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       {/* Header with chat information */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//         <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Message area */}\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {/* Display messages */}\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Input area */}\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\n// import React, { useState, useEffect, ChangeEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Chat[]>([]);\n//   const [socket, setSocket] = useState<WebSocket | null>(null);\n\n//   useEffect(() => {\n//     const ws = new WebSocket('ws://localhost:8080'); // Replace with your WebSocket server URL\n//     setSocket(ws);\n\n//     ws.onmessage = (event) => {\n//       const incomingMessage = JSON.parse(event.data);\n//       setMessages((prevMessages) => [...prevMessages, incomingMessage]);\n//     };\n\n//     return () => {\n//       ws.close();\n//     };\n//   }, []);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   const handleSendMessage = () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//       };\n//       const formattedTime = now.toLocaleTimeString([], options);\n\n//       const newMessage = {\n//         name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime,\n//         avatar: chat?.avatar || '/assets/default-avatar.svg',\n//         status: chat?.status || 'offline',\n//       };\n\n//       socket?.send(JSON.stringify(newMessage));\n//       setMessageInput('');\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\"flex-grow mb-4 p-4 ml-64 mt-20 flex flex-col h-[calc(100vh-5rem)]\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[700] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   function handleFileChange(event: ChangeEvent<HTMLInputElement>): void {\n//     throw new Error('Function not implemented.');\n//   }\n\n//   return (\n//     <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <div><IoPersonCircleSharp className='w-14 h-14'/></div>\n//           <div>\n//             <span>{chat.name}</span>\n//             <div className={`text-xs ${chat.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n//               {chat.status}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n//             {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n//             <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n//               <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n//                   {msg.time}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\n\ninterface Chat {\n  name: string;\n  message: string;\n  time: string;\n  avatar: string;\n  status: string;\n}\n\nfunction App() {\n  const [userId, setUserId] = useState<number | null>(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState<Chat[]>([]);\n  const [error, setError] = useState('');\n  const [chat, setChat] = useState<Chat | null>(null);\n  const socket = useRef<WebSocket | null>(null);\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socket.current = new WebSocket('ws://localhost:3001');\n\n    // Listen for messages from the server\n    socket.current.onmessage = async (event) => {\n      let data;\n      if (event.data instanceof Blob) {\n        data = await event.data.text();\n      } else {\n        data = event.data;\n      }\n      try {\n        const msg = JSON.parse(data);\n        if (msg.userId !== userId) { // Avoid duplicating the sent message\n          setMessages((prevMessages) => [...prevMessages, msg]);\n        }\n      } catch (error) {\n        console.error('Failed to parse message:', error);\n      }\n    };\n\n    // Clean up on component unmount\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [userId]);\n\n  const register = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/register', {\n        username,\n        password,\n      });\n      setUserId(response.data.userId);\n      setChat({\n        name: username,\n        message: '',\n        time: '',\n        avatar: '/assets/default-avatar.svg',\n        status: 'offline',\n      });\n      setError('');\n    } catch (error) {\n      setError('Registration failed. Please try again.');\n      console.error('Failed to register:', error);\n    }\n  };\n\n  const login = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        username,\n        password,\n      });\n      setUserId(response.data.userId);\n      setChat({\n        name: username,\n        message: '',\n        time: '',\n        avatar: '/assets/default-avatar.svg',\n        status: 'offline',\n      });\n      setError('');\n    } catch (error) {\n      setError('Invalid username or password.');\n      console.error('Failed to login:', error);\n    }\n  };\n\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      const msg: Chat = { \n        name: username, \n        message, \n        time: timestamp, \n        avatar: '/assets/default-avatar.svg', \n        status: 'online' \n      };\n      socket.current?.send(JSON.stringify(msg));\n      setMessages((prevMessages) => [...prevMessages, msg]);\n      setMessage('');\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevent the default behavior of the Enter key (like form submission)\n      sendMessage();\n    }\n  };\n\n  if (!userId) {\n    return (\n      <div className=\"flex h-screen items-center justify-center bg-gray-100\">\n        <div className=\"bg-white rounded shadow-md p-6 w-full max-w-md\">\n          <h2 className=\"text-xl font-bold mb-4\">Login / Register</h2>\n          <input\n            className=\"border border-gray-300 rounded p-2 w-full mb-2\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Username\"\n          />\n          <input\n            className=\"border border-gray-300 rounded p-2 w-full mb-2\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n          <div className=\"flex justify-between\">\n            <button\n              className=\"bg-blue-500 text-white rounded p-2 w-40 mb-2 mr-2\"\n              onClick={login}\n            >\n              Login\n            </button>\n            <button\n              className=\"bg-green-500 text-white rounded p-2 w-40\"\n              onClick={register}\n            >\n              Register\n            </button>\n          </div>\n          {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      <div className=\"flex-grow mb-4 flex flex-col h-[calc(100vh-5rem)]\">\n        {/* Header with chat information */}\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n            <IoPersonCircleSharp className='w-14 h-14'/>\n            <div>\n              <span>{chat?.name}</span>\n              <div className={`text-xs ${chat?.status === 'Online' ? 'text-green-500' : 'text-gray-500'}`}>\n                {chat?.status}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Message area */}\n        <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8] p-4\">\n          {/* Display messages */}\n          {messages.map((msg, index) => (\n            <div key={index} className={`flex ${msg.name === chat?.name ? 'justify-end' : ''} mb-4`}>\n              {msg.name !== chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full mr-2\" />}\n              <div className={`flex flex-col ${msg.name === chat?.name ? 'items-end' : ''}`}>\n                <p className=\"bg-white p-2 w-[490px] text-xs rounded-lg shadow-md\">\n                  {msg.message}\n                  <span className=\"text-xs text-gray-500 float-right\" style={{ position: 'relative', top: '-5px', marginRight: '10px' }}>\n                    {msg.time}\n                  </span>\n                </p>\n              </div>\n              {msg.name === chat?.name && <img src={msg.avatar} alt={msg.name} className=\"w-10 h-10 rounded-full ml-2\" />}\n            </div>\n          ))}\n        </div>\n\n        {/* Input area */}\n        <div className=\"flex items-center mb-4 p-4 border-t bg-[#ffffff] shadow-md\">\n          <input\n            type=\"file\"\n            id=\"file-input\"\n            className=\"hidden\"\n          />\n          <label htmlFor=\"file-input\">\n            <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Plus\" />\n          </label>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder=\"Type Here\"\n            className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\" \n          />\n          <img\n            onClick={sendMessage}\n            className=\"p-2 bg-white w-14 h-14 cursor-pointer\"\n            src=\"/assets/sendbutton.svg\"\n            alt=\"Send\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMuB,MAAM,GAAGtB,MAAM,CAAmB,IAAI,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACAqB,MAAM,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAErD;IACAF,MAAM,CAACC,OAAO,CAACE,SAAS,GAAG,MAAOC,KAAK,IAAK;MAC1C,IAAIC,IAAI;MACR,IAAID,KAAK,CAACC,IAAI,YAAYC,IAAI,EAAE;QAC9BD,IAAI,GAAG,MAAMD,KAAK,CAACC,IAAI,CAACE,IAAI,CAAC,CAAC;MAChC,CAAC,MAAM;QACLF,IAAI,GAAGD,KAAK,CAACC,IAAI;MACnB;MACA,IAAI;QACF,MAAMG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;QAC5B,IAAIG,GAAG,CAACtB,MAAM,KAAKA,MAAM,EAAE;UAAE;UAC3BS,WAAW,CAAEgB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,GAAG,CAAC,CAAC;QACvD;MACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACA,OAAO,MAAM;MACX,IAAII,MAAM,CAACC,OAAO,EAAE;QAClBD,MAAM,CAACC,OAAO,CAACY,KAAK,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;EAEZ,MAAM4B,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,IAAI,CAAC,gCAAgC,EAAE;QAClE5B,QAAQ;QACRE;MACF,CAAC,CAAC;MACFH,SAAS,CAAC4B,QAAQ,CAACV,IAAI,CAACnB,MAAM,CAAC;MAC/Ba,OAAO,CAAC;QACNkB,IAAI,EAAE7B,QAAQ;QACdI,OAAO,EAAE,EAAE;QACX0B,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE;MACV,CAAC,CAAC;MACFvB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,wCAAwC,CAAC;MAClDe,OAAO,CAAChB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMyB,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,IAAI,CAAC,6BAA6B,EAAE;QAC/D5B,QAAQ;QACRE;MACF,CAAC,CAAC;MACFH,SAAS,CAAC4B,QAAQ,CAACV,IAAI,CAACnB,MAAM,CAAC;MAC/Ba,OAAO,CAAC;QACNkB,IAAI,EAAE7B,QAAQ;QACdI,OAAO,EAAE,EAAE;QACX0B,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE;MACV,CAAC,CAAC;MACFvB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;MACzCe,OAAO,CAAChB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,MAAM0B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI9B,OAAO,CAAC+B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAAA,IAAAC,eAAA;MACzB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MAC3F,MAAMrB,GAAS,GAAG;QAChBS,IAAI,EAAE7B,QAAQ;QACdI,OAAO;QACP0B,IAAI,EAAEO,SAAS;QACfN,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE;MACV,CAAC;MACD,CAAAI,eAAA,GAAAxB,MAAM,CAACC,OAAO,cAAAuB,eAAA,uBAAdA,eAAA,CAAgBM,IAAI,CAACrB,IAAI,CAACsB,SAAS,CAACvB,GAAG,CAAC,CAAC;MACzCb,WAAW,CAAEgB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,GAAG,CAAC,CAAC;MACrDf,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMuC,aAAa,GAAIC,CAAwC,IAAK;IAClE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBD,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;MACpBb,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,IAAI,CAACpC,MAAM,EAAE;IACX,oBACEH,OAAA;MAAKqD,SAAS,EAAC,uDAAuD;MAAAC,QAAA,eACpEtD,OAAA;QAAKqD,SAAS,EAAC,gDAAgD;QAAAC,QAAA,gBAC7DtD,OAAA;UAAIqD,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D1D,OAAA;UACEqD,SAAS,EAAC,gDAAgD;UAC1DM,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEvD,QAAS;UAChBwD,QAAQ,EAAGX,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACF1D,OAAA;UACEqD,SAAS,EAAC,gDAAgD;UAC1DM,IAAI,EAAC,UAAU;UACfC,KAAK,EAAErD,QAAS;UAChBsD,QAAQ,EAAGX,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACF1D,OAAA;UAAKqD,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnCtD,OAAA;YACEqD,SAAS,EAAC,mDAAmD;YAC7DW,OAAO,EAAE1B,KAAM;YAAAgB,QAAA,EAChB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1D,OAAA;YACEqD,SAAS,EAAC,0CAA0C;YACpDW,OAAO,EAAEjC,QAAS;YAAAuB,QAAA,EACnB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EACL7C,KAAK,iBAAIb,OAAA;UAAKqD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEzC;QAAK;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE1D,OAAA;IAAKqD,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCtD,OAAA;MAAKqD,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAEhEtD,OAAA;QAAKqD,SAAS,EAAC,wCAAwC;QAAAC,QAAA,eACrDtD,OAAA;UAAKqD,SAAS,EAAC,+DAA+D;UAAAC,QAAA,gBAC5EtD,OAAA,CAACF,mBAAmB;YAACuD,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5C1D,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAAsD,QAAA,EAAOvC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB;YAAI;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzB1D,OAAA;cAAKqD,SAAS,EAAE,WAAW,CAAAtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,MAAM,MAAK,QAAQ,GAAG,gBAAgB,GAAG,eAAe,EAAG;cAAAiB,QAAA,EACzFvC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB;YAAM;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN1D,OAAA;QAAKqD,SAAS,EAAC,0DAA0D;QAAAC,QAAA,EAEtE3C,QAAQ,CAACsD,GAAG,CAAC,CAACxC,GAAG,EAAEyC,KAAK,kBACvBlE,OAAA;UAAiBqD,SAAS,EAAE,QAAQ5B,GAAG,CAACS,IAAI,MAAKnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,IAAG,aAAa,GAAG,EAAE,OAAQ;UAAAoB,QAAA,GACrF7B,GAAG,CAACS,IAAI,MAAKnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,kBAAIlC,OAAA;YAAKmE,GAAG,EAAE1C,GAAG,CAACW,MAAO;YAACgC,GAAG,EAAE3C,GAAG,CAACS,IAAK;YAACmB,SAAS,EAAC;UAA6B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3G1D,OAAA;YAAKqD,SAAS,EAAE,iBAAiB5B,GAAG,CAACS,IAAI,MAAKnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,IAAG,WAAW,GAAG,EAAE,EAAG;YAAAoB,QAAA,eAC5EtD,OAAA;cAAGqD,SAAS,EAAC,qDAAqD;cAAAC,QAAA,GAC/D7B,GAAG,CAAChB,OAAO,eACZT,OAAA;gBAAMqD,SAAS,EAAC,mCAAmC;gBAACgB,KAAK,EAAE;kBAAEC,QAAQ,EAAE,UAAU;kBAAEC,GAAG,EAAE,MAAM;kBAAEC,WAAW,EAAE;gBAAO,CAAE;gBAAAlB,QAAA,EACnH7B,GAAG,CAACU;cAAI;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,EACLjC,GAAG,CAACS,IAAI,MAAKnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,kBAAIlC,OAAA;YAAKmE,GAAG,EAAE1C,GAAG,CAACW,MAAO;YAACgC,GAAG,EAAE3C,GAAG,CAACS,IAAK;YAACmB,SAAS,EAAC;UAA6B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAVnGQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1D,OAAA;QAAKqD,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACzEtD,OAAA;UACE2D,IAAI,EAAC,MAAM;UACXc,EAAE,EAAC,YAAY;UACfpB,SAAS,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACF1D,OAAA;UAAO0E,OAAO,EAAC,YAAY;UAAApB,QAAA,eACzBtD,OAAA;YAAKqD,SAAS,EAAC,4CAA4C;YAACc,GAAG,EAAC,iBAAiB;YAACC,GAAG,EAAC;UAAM;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC,eACR1D,OAAA;UACE2D,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnD,OAAQ;UACfoD,QAAQ,EAAGX,CAAC,IAAKxC,UAAU,CAACwC,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAC5Ce,SAAS,EAAE1B,aAAc;UACzBc,WAAW,EAAC,WAAW;UACvBV,SAAS,EAAC;QAAgF;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F,CAAC,eACF1D,OAAA;UACEgE,OAAO,EAAEzB,WAAY;UACrBc,SAAS,EAAC,uCAAuC;UACjDc,GAAG,EAAC,wBAAwB;UAC5BC,GAAG,EAAC;QAAM;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxD,EAAA,CA/MQD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AAiNZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}