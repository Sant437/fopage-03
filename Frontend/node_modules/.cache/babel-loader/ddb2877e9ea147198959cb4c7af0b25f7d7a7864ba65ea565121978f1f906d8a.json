{"ast":null,"code":"var _jsxFileName = \"/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx\",\n  _s = $RefreshSig$();\n// // src/component/Chats.tsx\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = ({\n  userId,\n  otherUserId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [otherUser, setOtherUser] = useState(null);\n  const ws = useRef(null);\n  useEffect(() => {\n    // Fetch other user's profile\n\n    axios.get(`/api/user/${otherUserId}`).then(response => {\n      setOtherUser(response.data);\n    });\n\n    // WebSocket connection\n\n    ws.current = new WebSocket('ws://localhost:3000');\n    ws.current.onmessage = event => {\n      const newMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    };\n    return () => {\n      ws.current.close();\n    };\n  }, [otherUserId]);\n  const sendMessage = () => {\n    if (message.trim() === '') return;\n    const messageObject = {\n      sender_id: userId,\n      receiver_id: otherUserId,\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n\n    // Send message via WebSocket\n\n    ws.current.send(JSON.stringify(messageObject));\n\n    // Optionally, save the message in the backend\n\n    axios.post('/api/messages', messageObject).then(response => {}).catch(error => console.error('Error sending message:', error));\n    setMessage('');\n  };\n  const handleDeleteMessage = messageId => {\n    axios.delete(`/api/messages/${messageId}`).then(response => setMessages(messages.filter(msg => msg.id !== messageId))).catch(error => console.error('Error deleting message:', error));\n  };\n  const handleClearHistory = () => {\n    axios.delete('/api/messages/clear', {\n      data: {\n        user1: userId,\n        user2: otherUserId\n      }\n    }).then(response => setMessages([])).catch(error => console.error('Error clearing chat history:', error));\n  };\n  const handleForwardMessage = messageId => {\n    const newReceiverId = prompt('Enter the ID of the user to forward this message to:');\n    if (newReceiverId) {\n      axios.post('/api/messages/forward', {\n        originalMessageId: messageId,\n        newReceiverId,\n        senderId: userId\n      }).then(response => {}).catch(error => console.error('Error forwarding message:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [otherUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: otherUser.profile_picture,\n        alt: `${otherUser.username}'s profile`,\n        className: \"profile-picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: otherUser.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender_id === userId ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(msg.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), msg.sender_id === userId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteMessage(msg.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"forward-button\",\n            onClick: () => handleForwardMessage(msg.id),\n            children: \"Forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-history-button\",\n        onClick: handleClearHistory,\n        children: \"Clear History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"GQni+CpTeZzvOdZEWfLTE8x0zbI=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Chats","userId","otherUserId","_s","messages","setMessages","message","setMessage","otherUser","setOtherUser","ws","get","then","response","data","current","WebSocket","onmessage","event","newMessage","JSON","parse","prevMessages","close","sendMessage","trim","messageObject","sender_id","receiver_id","content","timestamp","Date","toISOString","send","stringify","post","catch","error","console","handleDeleteMessage","messageId","delete","filter","msg","id","handleClearHistory","user1","user2","handleForwardMessage","newReceiverId","prompt","originalMessageId","senderId","className","children","src","profile_picture","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","map","toLocaleString","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/dell/santhosh/react/fopage-01/Frontend/src/component/Chats.tsx"],"sourcesContent":["// // src/component/Chats.tsx\n// import React, { useState, useEffect } from 'react';\n// import '@fortawesome/fontawesome-free/css/all.min.css';\n// import axios from 'axios';\n// import MessageSystem from './MessageSystem';\n\n// interface Chat {\n//   name: string;\n//   message: string;\n//   time: string;\n//   avatar: string;\n//   status: string;\n// }\n\n// const Chats: React.FC = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentTime, setCurrentTime] = useState('');\n//   const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n//   const [chatData, setChatData] = useState<Chat[]>([]);\n\n//   const fetchChatData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/chats');\n//       setChatData(response.data);\n//     } catch (error) {\n//       console.error('Error fetching chat data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChatData();\n//   }, []);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const options: Intl.DateTimeFormatOptions = {\n//       hour: '2-digit',\n//       minute: '2-digit',\n//       hour12: true,\n//     };\n//     const formattedTime = now.toLocaleTimeString([], options);\n//     setCurrentTime(formattedTime);\n//   }, []);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       fetchChatData(); // Refresh chat data every 30 seconds\n//     }, 30000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleChatClick = (chat: Chat) => {\n//     setSelectedChat(chat);\n//   };\n\n//   return (\n//     <div className='flex h-screen'>\n//       <div className=\"flex flex-col mx-4 ml-5 w-1/3 h-530 shadow-md\">\n//         {/* Search Bar */}\n//         <div className=\"flex justify-center mb-4 mt-3\">\n//           <input\n//             type=\"text\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//             placeholder=\"Search here\"\n//             className=\"w-[85%] p-2 rounded-lg placeholder:text-xs text-left outline-none\"\n//           />\n//           <i className=\"fa fa-search absolute right-10 top-3 text-gray-400\"></i>\n//         </div>\n\n//         <div className=\"ml-6 z-2 flex flex-col mr-[30%] space-y-0\">\n//           <div className=\"flex gap-2.5 font-work-sans\">\n//             <div className=\"text-green-500\">\n//               <button className=\"bg-none p-2.5 border-b-2 border-green-500 cursor-pointer text-green-500 text-xs\">\n//                 Recent Chats\n//               </button>\n//             </div>\n//             <button className=\"border-none bg-none p-2.5 cursor-pointer text-gray-400 text-xs\">All Chats</button>\n//           </div>\n//           <div className=\"line text-gray-200\">\n//             <hr className=\"m-0 w-[93%]\" />\n//           </div>\n//         </div>\n\n//         {/* Scrollable Chat List */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           {chatData\n//             .filter((chat) =>\n//               chat.name.toLowerCase().includes(searchTerm.toLowerCase())\n//             )\n//             .map((chat, index) => (\n//               <div\n//                 key={index}\n//                 onClick={() => handleChatClick(chat)}\n//                 className=\"cursor-pointer\"\n//               >\n//                 <div className=\"bg-white p-4 h-16 mt-1 rounded mb-1\">\n//                   <div className='flex flex-row items-center'>\n//                     <div className=\"relative\">\n//                       <img\n//                         className=\"w-8 h-8 ml-2\"\n//                         src={chat.avatar}\n//                         alt=\"Profile\"\n//                       />\n//                     </div>\n//                     <div className='flex flex-col ml-1'>\n//                       <div className='text-xs font-semibold' style={{ color: \"#232323\" }}>\n//                         {chat.name}\n//                       </div>\n//                       <div className='text-xs whitespace-nowrap'>{chat.message}</div>\n//                     </div>\n//                     <div className='text-xs ml-6'>{chat.time}</div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"line ml-6 text-gray-200\">\n//                   <hr className=\"m-0 w-[93%]\" />\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       <div className=\"flex-grow h-full\">\n//         <MessageSystem chat={selectedChat} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chats;\n\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport axios from 'axios';\n \nconst Chats = ({ userId, otherUserId }) => {\n\n  const [messages, setMessages] = useState([]);\n\n  const [message, setMessage] = useState('');\n\n  const [otherUser, setOtherUser] = useState(null);\n\n  const ws = useRef(null);\n \n  useEffect(() => {\n\n    // Fetch other user's profile\n\n    axios.get(`/api/user/${otherUserId}`).then(response => {\n\n      setOtherUser(response.data);\n\n    });\n \n    // WebSocket connection\n\n    ws.current = new WebSocket('ws://localhost:3000');\n\n    ws.current.onmessage = (event) => {\n\n      const newMessage = JSON.parse(event.data);\n\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n\n    };\n \n    return () => {\n\n      ws.current.close();\n\n    };\n\n  }, [otherUserId]);\n \n  const sendMessage = () => {\n\n    if (message.trim() === '') return;\n \n    const messageObject = {\n\n      sender_id: userId,\n\n      receiver_id: otherUserId,\n\n      content: message,\n\n      timestamp: new Date().toISOString()\n\n    };\n \n    // Send message via WebSocket\n\n    ws.current.send(JSON.stringify(messageObject));\n \n    // Optionally, save the message in the backend\n\n    axios.post('/api/messages', messageObject)\n\n      .then(response => {})\n\n      .catch(error => console.error('Error sending message:', error));\n \n    setMessage('');\n\n  };\n \n  const handleDeleteMessage = (messageId) => {\n\n    axios.delete(`/api/messages/${messageId}`)\n\n      .then(response => setMessages(messages.filter(msg => msg.id !== messageId)))\n\n      .catch(error => console.error('Error deleting message:', error));\n\n  };\n \n  const handleClearHistory = () => {\n\n    axios.delete('/api/messages/clear', { data: { user1: userId, user2: otherUserId } })\n\n      .then(response => setMessages([]))\n\n      .catch(error => console.error('Error clearing chat history:', error));\n\n  };\n \n  const handleForwardMessage = (messageId) => {\n\n    const newReceiverId = prompt('Enter the ID of the user to forward this message to:');\n\n    if (newReceiverId) {\n\n      axios.post('/api/messages/forward', { originalMessageId: messageId, newReceiverId, senderId: userId })\n\n        .then(response => {})\n\n        .catch(error => console.error('Error forwarding message:', error));\n\n    }\n\n  };\n \n  return (\n\n    <div className=\"chat-container\">\n\n      {otherUser && (\n\n        <div className=\"user-profile\">\n\n          <img src={otherUser.profile_picture} alt={`${otherUser.username}'s profile`} className=\"profile-picture\" />\n\n          <h1>{otherUser.username}</h1>\n\n        </div>\n\n      )}\n\n      <div className=\"message-container\">\n\n        {messages.map(msg => (\n\n          <div key={msg.id} className={`message ${msg.sender_id === userId ? 'sent' : 'received'}`}>\n\n            <p>{msg.content}</p>\n\n            <small>{new Date(msg.timestamp).toLocaleString()}</small>\n\n            {msg.sender_id === userId && (\n\n              <div className=\"message-actions\">\n\n                <button className=\"delete-button\" onClick={() => handleDeleteMessage(msg.id)}>Delete</button>\n\n                <button className=\"forward-button\" onClick={() => handleForwardMessage(msg.id)}>Forward</button>\n\n              </div>\n\n            )}\n\n          </div>\n\n        ))}\n\n      </div>\n\n      <div className=\"message-input\">\n\n        <input\n\n          value={message}\n\n          onChange={(e) => setMessage(e.target.value)}\n\n          placeholder=\"Type your message\"\n\n          className=\"input-field\"\n\n        />\n\n        <button className=\"send-button\" onClick={sendMessage}>Send</button>\n\n        <button className=\"clear-history-button\" onClick={handleClearHistory}>Clear History</button>\n\n      </div>\n\n    </div>\n\n  );\n\n};\n \nexport default Chats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}