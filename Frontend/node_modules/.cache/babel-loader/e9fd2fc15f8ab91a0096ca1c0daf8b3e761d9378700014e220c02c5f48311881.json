{"ast":null,"code":"var _jsxFileName = \"/media/dell/6EB86CA1B86C6A13/santhosh/react/fopage-03/Frontend/src/component/MessageSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// import { io, Socket } from 'socket.io-client';\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n//   mobileNumber: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string; // Time should be a string\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   currentUserMobile: string;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n//   const socketio = useRef<Socket | null>(null);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n//           let data = await response.json();\n\n//           // Convert time to string if it's a Date object\n//           data = data.map((message: Message) => {\n//             const time = new Date(message.time);\n//             return {\n//               ...message,\n//               time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n//                 hour: '2-digit',\n//                 minute: '2-digit',\n//                 hour12: true,\n//                 timeZone: 'Asia/Kolkata',\n//               }).format(time),\n//             };\n//           });\n\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, currentUserMobile,handleInputChange]);\n\n//   useEffect(() => {\n//     if (chat) {\n//       socketio.current = io('http://localhost:5000');\n\n//       socketio.current.on('receiveMessage', (newMessage: any) => {\n//         const time = new Date(newMessage?.time);\n//         const formattedMessage = {\n//           ...newMessage,\n//           time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n//             hour: '2-digit',\n//             minute: '2-digit',\n//             hour12: true,\n//             timeZone: 'Asia/Kolkata',\n//           }).format(time),\n//         };\n\n//         setMessages(prevMessages => [...prevMessages, formattedMessage]);\n//       });\n\n//       return () => {\n//         socketio.current?.disconnect();\n//       };\n//     }\n//   }, [chat]);\n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//         timeZone: 'Asia/Kolkata',\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'San',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime, // Ensure time is a string\n//       };\n\n//       try {\n//         socketio.current?.emit('sendMessage', newMessage);\n\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//         timeZone: 'Asia/Kolkata',\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'San',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime, // Ensure time is a string\n//       };\n\n//       try {\n//         socketio.current?.emit('sendMessage', newMessage);\n\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\" mb-4 p-4 ml-64 mt-20 flex flex-col h-530\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex flex-col w-full\">\n//       <div className=\"flex justify-between items-center bg-white\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <IoPersonCircleSharp className='w-14 h-14 ml-7 mt-3 mb-3' />\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className='text-xs text-green-500'>\n//               Online\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8]\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex px-10 ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mt-4 mb-4 `}>\n//             {msg.sender_mobile !== currentUserMobile && (\n//               <img\n//                 src={chat.avatar || '/assets/vijay.svg'}\n//                 alt={msg.sender_name}\n//                 className=\"w-8 h-8 mt-5 rounded-full mr-2\"\n//               />\n//             )}\n//             <div className={`flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`}>\n//             <p className={`p-2 break-words hypens-auto max-w-[350px] text-xs rounded-lg shadow-md ${msg.sender_mobile === currentUserMobile ? 'bg-[#f1fff6]' : 'bg-white'}`}>\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right ml-52 mt-2\">\n//                   {msg.time} {/* Ensure time is a string */}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_mobile === currentUserMobile && (\n//               <img\n//                 src={chat.avatar || '/assets/default_avatar.png'}\n//                 alt={msg.sender_name}\n//                 className=\"w-8 h-8 mt-5 rounded-full ml-2\"\n//               />\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"flex items-center p-4 border-t bg-[#ffffff]\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"w-10 h-10 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageSystem = ({\n  chat,\n  currentUserMobile\n}) => {\n  _s();\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [file, setFile] = useState(null);\n  const socketio = useRef(null);\n  const messageEndRef = useRef(null);\n  const handleInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  useEffect(() => {\n    if (chat) {\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n          let data = await response.json();\n\n          // Convert time to string if it's a Date object\n          data = data.map(message => {\n            const time = new Date(message.time);\n            return {\n              ...message,\n              time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n                timeZone: 'Asia/Kolkata'\n              }).format(time)\n            };\n          });\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [chat, currentUserMobile]);\n  useEffect(() => {\n    if (chat) {\n      socketio.current = io('http://localhost:5000');\n      socketio.current.on('receiveMessage', newMessage => {\n        const time = new Date(newMessage === null || newMessage === void 0 ? void 0 : newMessage.time);\n        const formattedMessage = {\n          ...newMessage,\n          time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n            timeZone: 'Asia/Kolkata'\n          }).format(time)\n        };\n        setMessages(prevMessages => [...prevMessages, formattedMessage]); // This triggers the useEffect to scroll\n      });\n      return () => {\n        var _socketio$current;\n        (_socketio$current = socketio.current) === null || _socketio$current === void 0 ? void 0 : _socketio$current.disconnect();\n      };\n    }\n  }, [chat]);\n  useEffect(() => {\n    // Scroll to the bottom whenever messages change\n    if (messageEndRef.current) {\n      messageEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: 'Asia/Kolkata'\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n      const newMessage = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: (chat === null || chat === void 0 ? void 0 : chat.mobileNumber) || '',\n        sender_name: 'Santhosh Kumar D',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: messageInput,\n        time: formattedTime // Ensure time is a string\n      };\n      try {\n        var _socketio$current2;\n        (_socketio$current2 = socketio.current) === null || _socketio$current2 === void 0 ? void 0 : _socketio$current2.emit('sendMessage', newMessage);\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: 'Asia/Kolkata'\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n      const newMessage = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: (chat === null || chat === void 0 ? void 0 : chat.mobileNumber) || '',\n        sender_name: 'Santhosh Kumar D',\n        receiver_name: (chat === null || chat === void 0 ? void 0 : chat.name) || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime // Ensure time is a string\n      };\n      try {\n        var _socketio$current3;\n        (_socketio$current3 = socketio.current) === null || _socketio$current3 === void 0 ? void 0 : _socketio$current3.emit('sendMessage', newMessage);\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMessage)\n        });\n        setMessages([...messages, newMessage]);\n        setFile(null);\n      } catch (error) {\n        console.error('Error sending file message:', error);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 ml-64 mt-20 flex flex-col h-530\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a chat to see messages.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-[700] text-[#232323] flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(IoPersonCircleSharp, {\n          className: \"w-14 h-14 ml-7 mt-3 mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-green-500\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8]\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex px-10 ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mt-4 mb-4`,\n        children: [msg.sender_mobile !== currentUserMobile && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat.avatar || '/assets/vijay.svg',\n          alt: msg.sender_name,\n          className: \"w-8 h-8 mt-5 rounded-full mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `p-2 break-words hypens-auto max-w-[350px] text-xs rounded-lg shadow-md ${msg.sender_mobile === currentUserMobile ? 'bg-[#f1fff6]' : 'bg-white'}`,\n            children: [msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 float-right ml-20 mt-2\",\n              children: [msg.time, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), msg.sender_mobile === currentUserMobile && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat.avatar || '/assets/default_avatar.png',\n          alt: msg.sender_name,\n          className: \"w-8 h-8 mt-5 rounded-full ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 border-t bg-[#ffffff]\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        className: \"hidden\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\",\n          src: \"/assets/add.svg\",\n          alt: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleInputChange,\n        placeholder: \"Type Here\",\n        onKeyDown: handleKeyDown,\n        className: \"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleSendMessage,\n        className: \"w-10 h-10 cursor-pointer\",\n        src: \"/assets/sendbutton.svg\",\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageSystem, \"Nf2X2BTKv5PNn95PRoBfhFlv1Lk=\");\n_c = MessageSystem;\nexport default MessageSystem;\nvar _c;\n$RefreshReg$(_c, \"MessageSystem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","IoPersonCircleSharp","io","jsxDEV","_jsxDEV","MessageSystem","chat","currentUserMobile","_s","messageInput","setMessageInput","messages","setMessages","file","setFile","socketio","messageEndRef","handleInputChange","e","target","value","fetchMessages","response","fetch","mobileNumber","data","json","map","message","time","Date","isNaN","getTime","Intl","DateTimeFormat","hour","minute","hour12","timeZone","format","error","console","current","on","newMessage","formattedMessage","prevMessages","_socketio$current","disconnect","scrollIntoView","behavior","handleSendMessage","trim","now","options","formattedTime","toLocaleTimeString","sender_mobile","receiver_mobile","sender_name","receiver_name","name","_socketio$current2","emit","method","headers","body","JSON","stringify","handleFileChange","selectedFile","files","_socketio$current3","handleKeyDown","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","src","avatar","alt","ref","type","id","onChange","htmlFor","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/media/dell/6EB86CA1B86C6A13/santhosh/react/fopage-03/Frontend/src/component/MessageSystem.tsx"],"sourcesContent":["// import React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\n// import { IoPersonCircleSharp } from \"react-icons/io5\";\n// import { io, Socket } from 'socket.io-client';\n\n// interface Chat {\n//   name: string;\n//   avatar: string;\n//   status: string;\n//   mobileNumber: string;\n// }\n\n// interface Message {\n//   sender_mobile: string;\n//   receiver_mobile: string;\n//   sender_name: string;\n//   receiver_name: string;\n//   message: string;\n//   time: string; // Time should be a string\n// }\n\n// interface MessageSystemProps {\n//   chat: Chat | null;\n//   currentUserMobile: string;\n// }\n\n// const MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n//   const [messageInput, setMessageInput] = useState('');\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [file, setFile] = useState<File | null>(null);\n//   const socketio = useRef<Socket | null>(null);\n\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setMessageInput(e.target.value);\n//   };\n\n//   useEffect(() => {\n//     if (chat) {\n//       const fetchMessages = async () => {\n//         try {\n//           const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n//           let data = await response.json();\n\n//           // Convert time to string if it's a Date object\n//           data = data.map((message: Message) => {\n//             const time = new Date(message.time);\n//             return {\n//               ...message,\n//               time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n//                 hour: '2-digit',\n//                 minute: '2-digit',\n//                 hour12: true,\n//                 timeZone: 'Asia/Kolkata',\n//               }).format(time),\n//             };\n//           });\n\n//           setMessages(data);\n//         } catch (error) {\n//           console.error('Error fetching messages:', error);\n//         }\n//       };\n\n//       fetchMessages();\n//     }\n//   }, [chat, currentUserMobile,handleInputChange]);\n\n//   useEffect(() => {\n//     if (chat) {\n//       socketio.current = io('http://localhost:5000');\n\n//       socketio.current.on('receiveMessage', (newMessage: any) => {\n//         const time = new Date(newMessage?.time);\n//         const formattedMessage = {\n//           ...newMessage,\n//           time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n//             hour: '2-digit',\n//             minute: '2-digit',\n//             hour12: true,\n//             timeZone: 'Asia/Kolkata',\n//           }).format(time),\n//         };\n\n//         setMessages(prevMessages => [...prevMessages, formattedMessage]);\n//       });\n\n//       return () => {\n//         socketio.current?.disconnect();\n//       };\n//     }\n//   }, [chat]);\n\n \n\n//   const handleSendMessage = async () => {\n//     if (messageInput.trim()) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//         timeZone: 'Asia/Kolkata',\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'San',\n//         receiver_name: chat?.name || 'User',\n//         message: messageInput,\n//         time: formattedTime, // Ensure time is a string\n//       };\n\n//       try {\n//         socketio.current?.emit('sendMessage', newMessage);\n\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setMessageInput('');\n//       } catch (error) {\n//         console.error('Error sending message:', error);\n//       }\n//     }\n//   };\n\n//   const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const selectedFile = e.target.files ? e.target.files[0] : null;\n//     if (selectedFile) {\n//       const now = new Date();\n//       const options: Intl.DateTimeFormatOptions = {\n//         hour: '2-digit',\n//         minute: '2-digit',\n//         hour12: true,\n//         timeZone: 'Asia/Kolkata',\n//       };\n//       const formattedTime = now.toLocaleTimeString('en-US', options);\n\n//       const newMessage: Message = {\n//         sender_mobile: currentUserMobile,\n//         receiver_mobile: chat?.mobileNumber || '',\n//         sender_name: 'San',\n//         receiver_name: chat?.name || 'User',\n//         message: `Sent a file: ${selectedFile.name}`,\n//         time: formattedTime, // Ensure time is a string\n//       };\n\n//       try {\n//         socketio.current?.emit('sendMessage', newMessage);\n\n//         await fetch('/api/messages', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(newMessage),\n//         });\n\n//         setMessages([...messages, newMessage]);\n//         setFile(null);\n//       } catch (error) {\n//         console.error('Error sending file message:', error);\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n//     if (e.key === 'Enter') {\n//       e.preventDefault();\n//       handleSendMessage();\n//     }\n//   };\n\n//   if (!chat) {\n//     return (\n//       <div className=\" mb-4 p-4 ml-64 mt-20 flex flex-col h-530\">\n//         <div className=\"flex justify-between items-center mb-4\">\n//           <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n//             <span>Select a chat to see messages.</span>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"flex flex-col w-full\">\n//       <div className=\"flex justify-between items-center bg-white\">\n//         <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n//           <IoPersonCircleSharp className='w-14 h-14 ml-7 mt-3 mb-3' />\n//           <div>\n//             <span className='font-medium'>{chat.name}</span>\n//             <div className='text-xs text-green-500'>\n//               Online\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8]\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className={`flex px-10 ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mt-4 mb-4 `}>\n//             {msg.sender_mobile !== currentUserMobile && (\n//               <img\n//                 src={chat.avatar || '/assets/vijay.svg'}\n//                 alt={msg.sender_name}\n//                 className=\"w-8 h-8 mt-5 rounded-full mr-2\"\n//               />\n//             )}\n//             <div className={`flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`}>\n//             <p className={`p-2 break-words hypens-auto max-w-[350px] text-xs rounded-lg shadow-md ${msg.sender_mobile === currentUserMobile ? 'bg-[#f1fff6]' : 'bg-white'}`}>\n//                 {msg.message}\n//                 <span className=\"text-xs text-gray-500 float-right ml-52 mt-2\">\n//                   {msg.time} {/* Ensure time is a string */}\n//                 </span>\n//               </p>\n//             </div>\n//             {msg.sender_mobile === currentUserMobile && (\n//               <img\n//                 src={chat.avatar || '/assets/default_avatar.png'}\n//                 alt={msg.sender_name}\n//                 className=\"w-8 h-8 mt-5 rounded-full ml-2\"\n//               />\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"flex items-center p-4 border-t bg-[#ffffff]\">\n//         <input\n//           type=\"file\"\n//           id=\"file-input\"\n//           className=\"hidden\"\n//           onChange={handleFileChange}\n//         />\n//         <label htmlFor=\"file-input\">\n//           <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           value={messageInput}\n//           onChange={handleInputChange}\n//           placeholder=\"Type Here\"\n//           onKeyDown={handleKeyDown}\n//           className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n//         />\n//         <img\n//           onClick={handleSendMessage}\n//           className=\"w-10 h-10 cursor-pointer\"\n//           src=\"/assets/sendbutton.svg\"\n//           alt=\"Send\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MessageSystem;\n\n\n\n\n\n\nimport React, { useState, useEffect, useRef, KeyboardEvent } from 'react';\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport { io, Socket } from 'socket.io-client';\n\ninterface Chat {\n  name: string;\n  avatar: string;\n  status: string;\n  mobileNumber: string;\n}\n\ninterface Message {\n  sender_mobile: string;\n  receiver_mobile: string;\n  sender_name: string;\n  receiver_name: string;\n  message: string;\n  time: string; // Time should be a string\n}\n\ninterface MessageSystemProps {\n  chat: Chat | null;\n  currentUserMobile: string;\n}\n\nconst MessageSystem: React.FC<MessageSystemProps> = ({ chat, currentUserMobile }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [file, setFile] = useState<File | null>(null);\n  const socketio = useRef<Socket | null>(null);\n  const messageEndRef = useRef<HTMLDivElement | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(e.target.value);\n  };\n\n  useEffect(() => {\n    if (chat) {\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`/api/messages?sender_mobile=${currentUserMobile}&receiver_mobile=${chat.mobileNumber}`);\n          let data = await response.json();\n\n          // Convert time to string if it's a Date object\n          data = data.map((message: Message) => {\n            const time = new Date(message.time);\n            return {\n              ...message,\n              time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n                timeZone: 'Asia/Kolkata',\n              }).format(time),\n            };\n          });\n\n          setMessages(data);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [chat, currentUserMobile]);\n\n  useEffect(() => {\n    if (chat) {\n      socketio.current = io('http://localhost:5000');\n\n      socketio.current.on('receiveMessage', (newMessage: any) => {\n        const time = new Date(newMessage?.time);\n        const formattedMessage = {\n          ...newMessage,\n          time: isNaN(time.getTime()) ? '' : new Intl.DateTimeFormat('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n            timeZone: 'Asia/Kolkata',\n          }).format(time),\n        };\n\n        setMessages(prevMessages => [...prevMessages, formattedMessage]); // This triggers the useEffect to scroll\n      });\n\n      return () => {\n        socketio.current?.disconnect();\n      };\n    }\n  }, [chat]);\n\n  useEffect(() => {\n    // Scroll to the bottom whenever messages change\n    if (messageEndRef.current) {\n      messageEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (messageInput.trim()) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: 'Asia/Kolkata',\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n\n      const newMessage: Message = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: chat?.mobileNumber || '',\n        sender_name: 'Santhosh Kumar D',\n        receiver_name: chat?.name || 'User',\n        message: messageInput,\n        time: formattedTime, // Ensure time is a string\n      };\n\n      try {\n        socketio.current?.emit('sendMessage', newMessage);\n\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(newMessage),\n        });\n\n        setMessages([...messages, newMessage]);\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files ? e.target.files[0] : null;\n    if (selectedFile) {\n      const now = new Date();\n      const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: 'Asia/Kolkata',\n      };\n      const formattedTime = now.toLocaleTimeString('en-US', options);\n\n      const newMessage: Message = {\n        sender_mobile: currentUserMobile,\n        receiver_mobile: chat?.mobileNumber || '',\n        sender_name: 'Santhosh Kumar D',\n        receiver_name: chat?.name || 'User',\n        message: `Sent a file: ${selectedFile.name}`,\n        time: formattedTime, // Ensure time is a string\n      };\n\n      try {\n        socketio.current?.emit('sendMessage', newMessage);\n\n        await fetch('/api/messages', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(newMessage),\n        });\n\n        setMessages([...messages, newMessage]);\n        setFile(null);\n      } catch (error) {\n        console.error('Error sending file message:', error);\n      }\n    }\n  };\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"mb-4 p-4 ml-64 mt-20 flex flex-col h-530\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-xl font-[600] mb-5 text-[#232323] flex items-center space-x-2\">\n            <span>Select a chat to see messages.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"flex justify-between items-center bg-white\">\n        <div className=\"text-xl font-[700] text-[#232323] flex items-center space-x-2\">\n          <IoPersonCircleSharp className='w-14 h-14 ml-7 mt-3 mb-3' />\n          <div>\n            <span className='font-medium'>{chat.name}</span>\n            <div className='text-xs text-green-500'>Online</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col flex-grow overflow-y-auto bg-[#f6f6f8]\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`flex px-10 ${msg.sender_mobile === currentUserMobile ? 'justify-end' : 'justify-start'} mt-4 mb-4`}>\n            {msg.sender_mobile !== currentUserMobile && (\n              <img\n                src={chat.avatar || '/assets/vijay.svg'}\n                alt={msg.sender_name}\n                className=\"w-8 h-8 mt-5 rounded-full mr-2\"\n              />\n            )}\n            <div className={`flex flex-col ${msg.sender_mobile === currentUserMobile ? 'items-end' : 'items-start'}`}>\n              <p className={`p-2 break-words hypens-auto max-w-[350px] text-xs rounded-lg shadow-md ${msg.sender_mobile === currentUserMobile ? 'bg-[#f1fff6]' : 'bg-white'}`}>\n                {msg.message}\n                <span className=\"text-xs text-gray-500 float-right ml-20 mt-2\">\n                  {msg.time} {/* Ensure time is a string */}\n                </span>\n              </p>\n            </div>\n            {msg.sender_mobile === currentUserMobile && (\n              <img\n                src={chat.avatar || '/assets/default_avatar.png'}\n                alt={msg.sender_name}\n                className=\"w-8 h-8 mt-5 rounded-full ml-2\"\n              />\n            )}\n          </div>\n        ))}\n        <div ref={messageEndRef} />\n      </div>\n\n      <div className=\"flex items-center p-4 border-t bg-[#ffffff]\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          className=\"hidden\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"file-input\">\n          <img className=\"p-2 mr-2 bg-white w-10 h-10 cursor-pointer\" src=\"/assets/add.svg\" alt=\"Add\" />\n        </label>\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={handleInputChange}\n          placeholder=\"Type Here\"\n          onKeyDown={handleKeyDown}\n          className=\"text-xs font-medium text-gray-400 flex-grow p-2 border rounded-lg outline-none\"\n        />\n        <img\n          onClick={handleSendMessage}\n          className=\"w-10 h-10 cursor-pointer\"\n          src=\"/assets/sendbutton.svg\"\n          alt=\"Send\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSystem;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}